<?xml version="1.0" encoding="UTF-8"?>
<ns1:RetrieveDocumentSetResponse xmlns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:ns1="urn:ihe:iti:xds-b:2007" xmlns:ns10="http://xml.netbeans.org/schema/realDocumentEntry" xmlns:ns11="http://xml.netbeans.org/schema/homeCommunity" xmlns:ns12="http://xml.netbeans.org/schema/address" xmlns:ns13="http://xml.netbeans.org/schema/personName" xmlns:ns14="http://xml.netbeans.org/schema/subjectDiscoveryInfo" xmlns:ns15="http://xml.netbeans.org/schema/qualifiedSubjectId" xmlns:ns16="http://xml.netbeans.org/schema/phone" xmlns:ns17="http://xml.netbeans.org/schema/dataTransform" xmlns:ns18="http://xml.netbeans.org/schema/document" xmlns:ns19="http://xml.netbeans.org/schema/documentInfo" xmlns:ns2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:ns3="urn:ihe:iti:xds-b:2007" xmlns:ns4="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:ns5="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:ns6="urn:hl7-org:v3" xmlns:ns7="http://xml.netbeans.org/schema/response" xmlns:ns8="urn:gov:hhs:fha:nhinc:xsd:documentregistryinfo" xmlns:ns9="http://xml.netbeans.org/schema/ce">
  <ns2:RegistryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success"/>
  <ns3:DocumentResponse>
    <ns3:HomeCommunityId>urn:oid:2.16.840.1.113883.3.200</ns3:HomeCommunityId>
    <ns3:RepositoryUniqueId>1</ns3:RepositoryUniqueId>
    <ns3:DocumentUniqueId>2.7.11111</ns3:DocumentUniqueId>
    <ns3:mimeType>text/xml</ns3:mimeType>
    <ns3:Document></ns3:Document>
  </ns3:DocumentResponse>
</ns1:RetrieveDocumentSetResponse>
