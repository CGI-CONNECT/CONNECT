<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="EntityPatientDiscoveryEJB" default="default" basedir="." xmlns:ejbjarproject="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
    <description>Builds, tests, and runs the project EntityPatientDiscoveryEJB.</description>
    <property name="deploy.type" value="ejb" />
    <property name="deploy.isDeployable" value="true"/>
    <import file="../../../build.lib.xml"/>

    <import file="nbproject/build-impl.xml"/>
    <target name="build">
            <property name="target-to-call" value="dist"/>
            <antcall target="call-target-in-isolation-if-out-of-date"/>
    </target>
    <target name="clean-build" depends="clean,dist"/>
    <target name="clean-test" depends="clean,dist"/>
    <target name="build-test" depends="dist"/>

    <target name="wsimport-service-NhincProxyPatientDiscoverySecured" depends="wsimport-init">
        <property name="targetLocation-NhincProxyPatientDiscoverySecured" location="${meta.inf}/wsdl/NhincProxyPatientDiscoverySecured"/>
        <property name="sourceLocation-NhincProxyPatientDiscoverySecured" location="${meta.inf}/xml-resources/web-services/NhincProxyPatientDiscoverySecured/wsdl/"/>
        <copy todir="${targetLocation-NhincProxyPatientDiscoverySecured}">
            <fileset dir="${sourceLocation-NhincProxyPatientDiscoverySecured}"/>
        </copy>
        <property name="targetLocationSchemas-NhincProxyPatientDiscoverySecured" location="${meta.inf}/wsdl/schemas"/>
        <property name="sourceLocationSchemas-NhincProxyPatientDiscoverySecured" location="${meta.inf}/xml-resources/web-services/NhincProxyPatientDiscoverySecured/schemas/"/>
        <copy todir="${targetLocationSchemas-NhincProxyPatientDiscoverySecured}">
            <fileset dir="${sourceLocationSchemas-NhincProxyPatientDiscoverySecured}"/>
        </copy>
    </target>

    <target name="wsimport-service-EntityPatientDiscoverySecured" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/service/EntityPatientDiscoverySecured"/>
        <property name="service-wsdl-EntityPatientDiscoverySecured" location="${meta.inf}/xml-resources/web-services/EntityPatientDiscoverySecured/wsdl/EntityPatientDiscoverySecured.wsdl"/>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/service/EntityPatientDiscoverySecured">
                <include name="**/*.java"/>
            </fileset>
        </copy>
        <property name="targetLocation-EntityPatientDiscoverySecured" location="${meta.inf}/wsdl/EntityPatientDiscoverySecured"/>
        <property name="sourceLocation-EntityPatientDiscoverySecured" location="${meta.inf}/xml-resources/web-services/EntityPatientDiscoverySecured/wsdl/"/>
        <copy todir="${targetLocation-EntityPatientDiscoverySecured}">
            <fileset dir="${sourceLocation-EntityPatientDiscoverySecured}"/>
        </copy>

        <echo message="copy schemas" />
        <copy todir="${basedir}/${meta.inf}/wsdl/schemas/">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/EntityPatientDiscoverySecured/schemas/" />
        </copy>

    </target>

    <target depends="compile" name="library-inclusion-in-archive">
        <copy file="${file.reference.NhincLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhincDataTransformsLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AuditRepositoryProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AuditRepositoryProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhinServiceProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PolicyEngineProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PolicyEngineProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.jmock-2.5.1.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.jmock-junit3-2.5.1.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.jmock-junit4-2.5.1.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.jmock-legacy-2.5.1.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.jmock-script-2.5.1.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.AdapterMpiProxy.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.AdapterMpiProxyImpl.jar}" todir="${build.classes.dir}"/>
    </target>
	<target depends="compile" name="library-inclusion-in-manifest">
		<basename file="${file.reference.NhincLib.jar}" property="included.lib.reference.NhincLib.jar"/>
		<copy file="${file.reference.NhincLib.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.NhincDataTransformsLib.jar}" property="included.lib.reference.NhincDataTransformsLib.jar"/>
		<copy file="${file.reference.NhincDataTransformsLib.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.AuditRepositoryProxy.jar}" property="included.lib.reference.AuditRepositoryProxy.jar"/>
		<copy file="${file.reference.AuditRepositoryProxy.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.AuditRepositoryProxyImpl.jar}" property="included.lib.reference.AuditRepositoryProxyImpl.jar"/>
		<copy file="${file.reference.AuditRepositoryProxyImpl.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" property="included.lib.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar"/>
		<copy file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.NhinServiceProxy.jar}" property="included.lib.reference.NhinPatientDiscoveryProxy.jar"/>
		<copy file="${file.reference.NhinServiceProxy.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.NhincSamlTokenLib.jar}" property="included.lib.reference.NhincSamlTokenLib.jar"/>
		<copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${dist.ear.dir}"/>
                <copyfiles files="${file.reference.AdapterMpiProxy.jar}" property="manifest.reference.AdapterMpiProxy.jar" todir="${dist.ear.dir}"/>
                <copyfiles files="${file.reference.AdapterMpiProxyImpl.jar}" property="manifest.reference.AdapterMpiProxyImpl.jar" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.PolicyEngineProxy.jar}" property="included.lib.reference.PolicyEngineProxy.jar"/>
		<copy file="${file.reference.PolicyEngineProxy.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.PolicyEngineProxyImpl.jar}" property="included.lib.reference.PolicyEngineProxyImpl.jar"/>
		<copy file="${file.reference.PolicyEngineProxyImpl.jar}" todir="${dist.ear.dir}"/>
		<manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
		<!-- Add jar references to those projects commented out above -->
			<attribute name="Class-Path" value="${included.lib.reference.NhincLib.jar} ${included.lib.reference.NhincDataTransformsLib.jar} ${included.lib.reference.AuditRepositoryProxyImpl.jar} ${included.lib.reference.AuditRepositoryProxy.jar} ${included.lib.reference.NhinPatientDiscoveryProxyImpl.jar} ${included.lib.reference.NhinPatientDiscoveryProxy.jar} ${included.lib.reference.NhincSamlTokenLib.jar}  ${manifest.reference.AdapterMpiProxy.jar} ${manifest.reference.AdapterMpiProxyImpl.jar}"/>
		</manifest>
	</target>
	<target depends="init" if="netbeans.home" name="undeploy-clean" unless="from.commandline">
		<nbundeploy failOnError="false" startServer="false"/>
	</target>
</project>
