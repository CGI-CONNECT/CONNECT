<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="NhincPatientDiscoveryEJB" default="default" basedir="." xmlns:ejbjarproject="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
    <description>Builds, tests, and runs the project NhincPatientDiscoveryEJB.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <property name="deploy.type" value="ejb" />
    <property name="deploy.isDeployable" value="true"/>

    <import file="../../../build.lib.xml" />

    <target name="build">
        <property name="target-to-call" value="dist" />
        <antcall target="call-target-in-isolation-if-out-of-date" />
    </target>
    <target name="clean-build" depends="clean,dist" />
    <target name="clean-test" depends="clean,dist, test" />
    <target name="build-test" depends="dist, test" />
    
    
    <target name="wsimport-service-NhinPatientDiscovery" depends="wsimport-init">
        <echo message="copy wsdl's" />
        <copy todir="${basedir}/${meta.inf}/wsdl/NhinPatientDiscovery">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/NhinPatientDiscovery/wsdl/"/>
        </copy>
        
        <echo message="copy schemas" />
        <copy todir="${basedir}/${meta.inf}/wsdl/schemas/">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/NhinPatientDiscovery/schemas/" />
        </copy>
    </target>

    <target depends="compile" name="library-inclusion-in-archive">
        <copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.GatewayInternalComponentProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AdapterMpiProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AdapterMpiProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PatientCorrelationFacade.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PatientCorrelationFacadeProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AdapterServiceProxy.jar}" todir="${build.classes.dir}"/>
    </target>
    <target depends="compile" name="library-inclusion-in-manifest">
        <basename file="${file.reference.NhincSamlTokenLib.jar}" property="included.lib.reference.NhincSamlTokenLib.jar"/>
        <copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhincLib.jar}" property="included.lib.reference.NhincLib.jar"/>
        <copy file="${file.reference.NhincLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.GatewayInternalComponentProxy.jar}" property="included.lib.reference.GatewayInternalComponentProxy.jar"/>
        <copy file="${file.reference.GatewayInternalComponentProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhincDataTransformsLib.jar}" property="included.lib.reference.NhincDataTransformsLib.jar"/>
        <copy file="${file.reference.NhincDataTransformsLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" property="included.lib.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar"/>
        <copy file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AdapterMpiProxy.jar}" property="included.lib.reference.AdapterMpiProxy.jar"/>
        <copy file="${file.reference.AdapterMpiProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AdapterMpiProxyImpl.jar}" property="included.lib.reference.AdapterMpiProxyImpl.jar"/>
        <copy file="${file.reference.AdapterMpiProxyImpl.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.PatientCorrelationFacade.jar}" property="included.lib.reference.PatientCorrelationFacade.jar"/>
        <copy file="${file.reference.PatientCorrelationFacade.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.PatientCorrelationFacadeProxy.jar}" property="included.lib.reference.PatientCorrelationFacadeProxy.jar"/>
        <copy file="${file.reference.PatientCorrelationFacadeProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AdapterServiceProxy.jar}" property="included.lib.reference.AdapterServiceProxy.jar"/>
        <copy file="${file.reference.AdapterServiceProxy.jar}" todir="${dist.ear.dir}"/>
        <manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${included.lib.reference.NhincSamlTokenLib.jar} ${included.lib.reference.GatewayInternalComponentProxy.jar} ${included.lib.reference.AdapterServiceProxy.jar} ${included.lib.reference.AdapterMpiProxy.jar} ${included.lib.reference.AdapterMpiProxyImpl.jar} ${included.lib.reference.PatientCorrelationFacade.jar} ${included.lib.reference.PatientCorrelationFacadeProxy.jar}"/>
        </manifest>
    </target>
    <target depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests" name="-post-test-run">
        <copy todir="${nhin.project.home}\UnitTestResults">
            <fileset dir="${build.test.results.dir}"/>
        </copy>
        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
    </target>

    <target depends="init" if="netbeans.home" name="undeploy-clean" unless="from.commandline">
        <nbundeploy failOnError="false" startServer="false"/>
    </target>
</project>
