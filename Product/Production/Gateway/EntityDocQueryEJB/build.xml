<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="EntityDocQueryEJB" default="default" basedir="." xmlns:ejbjarproject="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
    <description>Builds, tests, and runs the project EntityDocQueryEJB.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <property name="deploy.type" value="ejb" />
    <property name="deploy.isDeployable" value="true"/>
    
    <import file="../../../build.lib.xml"/>
    <target name="build">
        <property name="target-to-call" value="dist"/>
        <antcall target="call-target-in-isolation-if-out-of-date"/>
    </target>
    <target name="clean-build" depends="clean,dist"/>
    <target name="clean-test" depends="clean,dist"/>
    <target name="build-test" depends="dist"/>
    
    <target name="wsimport-service-EntityDocQuerySecured" depends="wsimport-init">
        <property name="targetLocation-EntityDocQuerySecured" location="${meta.inf}/wsdl/EntityDocQuerySecured"/>
        <property name="sourceLocation-EntityDocQuerySecured" location="${meta.inf}/xml-resources/web-services/EntityDocQuerySecured/wsdl/"/>
        <copy todir="${targetLocation-EntityDocQuerySecured}">
            <fileset dir="${sourceLocation-EntityDocQuerySecured}"/>
        </copy>
        <property name="targetLocationSchemas-EntityDocQuerySecured" location="${meta.inf}/wsdl/schemas"/>
        <property name="sourceLocationSchemas-EntityDocQuerySecured" location="${meta.inf}/xml-resources/web-services/EntityDocQuerySecured/schemas/"/>
        <copy todir="${targetLocationSchemas-EntityDocQuerySecured}">
            <fileset dir="${sourceLocationSchemas-EntityDocQuerySecured}"/>
        </copy>
    </target>
    <target name="wsimport-service-NhincProxyDocQuerySecured" depends="wsimport-init">
        <property name="targetLocation-NhincProxyDocQuerySecured" location="${meta.inf}/wsdl/NhincProxyDocQuerySecured"/>
        <property name="sourceLocation-NhincProxyDocQuerySecured" location="${meta.inf}/xml-resources/web-services/NhincProxyDocQuerySecured/wsdl/"/>
        <copy todir="${targetLocation-NhincProxyDocQuerySecured}">
            <fileset dir="${sourceLocation-NhincProxyDocQuerySecured}"/>
        </copy>
        <property name="targetLocationSchemas-NhincProxyDocQuerySecured" location="${meta.inf}/wsdl/schemas"/>
        <property name="sourceLocationSchemas-NhincProxyDocQuerySecured" location="${meta.inf}/xml-resources/web-services/NhincProxyDocQuerySecured/schemas/"/>
        <copy todir="${targetLocationSchemas-NhincProxyDocQuerySecured}">
            <fileset dir="${sourceLocationSchemas-NhincProxyDocQuerySecured}"/>
        </copy>
    </target>
	
    <target depends="compile" name="library-inclusion-in-archive">
        <copy file="${file.reference.NhincLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhincDataTransformsLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AuditRepositoryProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AuditRepositoryProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PatientCorrelationFacade.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.PatientCorrelationFacadeProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.NhinServiceProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.AggregatorLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.PolicyEngineProxy.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.PolicyEngineProxyImpl.jar}" todir="${build.classes.dir}"/>
    </target>
    <target depends="compile" name="library-inclusion-in-manifest">
        <basename file="${file.reference.NhincLib.jar}" property="included.lib.reference.NhincLib.jar"/>
        <copy file="${file.reference.NhincLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhincSamlTokenLib.jar}" property="included.lib.reference.NhincSamlTokenLib.jar"/>
        <copy file="${file.reference.NhincSamlTokenLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhincDataTransformsLib.jar}" property="included.lib.reference.NhincDataTransformsLib.jar"/>
        <copy file="${file.reference.NhincDataTransformsLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AuditRepositoryProxyImpl.jar}" property="included.lib.reference.AuditRepositoryProxyImpl.jar"/>
        <copy file="${file.reference.AuditRepositoryProxyImpl.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AuditRepositoryProxy.jar}" property="included.lib.reference.AuditRepositoryProxy.jar"/>
        <copy file="${file.reference.AuditRepositoryProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.PatientCorrelationFacade.jar}" property="included.lib.reference.PatientCorrelationFacade.jar"/>
        <copy file="${file.reference.PatientCorrelationFacade.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.PatientCorrelationFacadeProxy.jar}" property="included.lib.reference.PatientCorrelationFacadeProxy.jar"/>
        <copy file="${file.reference.PatientCorrelationFacadeProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhinServiceProxy.jar}" property="included.lib.reference.NhinServiceProxy.jar"/>
        <copy file="${file.reference.NhinServiceProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.NhinDocQueryProxy.jar}" property="included.lib.reference.NhinDocQueryProxy.jar"/>
        <copy file="${file.reference.NhinDocQueryProxy.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" property="included.lib.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar"/>
        <copy file="${file.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar}" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.AggregatorLib.jar}" manifestproperty="manifest.reference.AggregatorLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.PolicyEngineProxy.jar}" manifestproperty="manifest.reference.PolicyEngineProxy.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.PolicyEngineProxyImpl.jar}" manifestproperty="manifest.reference.PolicyEngineProxyImpl.jar" todir="${dist.ear.dir}"/>
        <manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${included.lib.reference.NhincLib.jar} ${included.lib.reference.NhincSamlTokenLib.jar} ${included.lib.reference.NhincDataTransformsLib.jar} ${included.lib.reference.AuditRepositoryProxyImpl.jar} ${included.lib.reference.AuditRepositoryProxy.jar} ${included.lib.reference.PatientCorrelationFacade.jar} ${included.lib.reference.PatientCorrelationFacadeProxy.jar}  ${included.lib.reference.NhinDocQueryProxyImpl.jar} ${included.lib.reference.NhinDocQueryProxy.jar} ${included.lib.reference.AssigningAuthoritiesToHomeCommunityMappingDAO.jar} ${manifest.reference.AggregatorLib.jar} ${manifest.reference.PolicyEngineProxy.jar} ${manifest.reference.PolicyEngineProxyImpl.jar} "/>
        </manifest>
    </target>
    <target depends="init" if="netbeans.home" name="undeploy-clean" unless="from.commandline">
        <nbundeploy failOnError="false" startServer="false"/>
    </target>
</project>
