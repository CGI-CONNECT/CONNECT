<?xml version="1.0" encoding="UTF-8"?>
<process
    name="NhinNotify"
    targetNamespace="urn:gov:hhs:fha:nhinc:gateway:nhinbpel:nhinnotify"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
    xmlns:tns="urn:gov:hhs:fha:nhinc:gateway:nhinbpel:nhinnotify" 
    xmlns:propacc="urn:gov:hhs:fha:nhinc:common:propertyaccess" 
    xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" 
    xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" 
    xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" 
    xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" 
    xmlns:nhinccommonintorch="urn:gov:hhs:fha:nhinc:common:nhinccommoninternalorch"  
    xmlns:nccommonadapter="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter" 
    xmlns:nccommonsub="urn:gov:hhs:fha:nhinc:common:subscription" 
    xmlns:subdte="urn:gov:hhs:fha:nhinc:common:subscriptiondte" 
    xmlns:hiemauditlog="urn:gov:hhs:fha:nhinc:common:hiemauditlog"
    xmlns:auditlog="urn:gov:hhs:fha:nhinc:common:auditlog">
    <import namespace="urn:gov:hhs:fha:nhinc:nhincsubscription" location="Interfaces/wsdl/NhincSubscription.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://docs.oasis-open.org/wsrf/rw-2" location="Interfaces/wsdl/rw-2.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" location="Interfaces/wsdl/NhincComponentPropAccessor.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" location="Interfaces/wsdl/NhincComponentInternalSubscriptionDte.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" location="Interfaces/wsdl/NhincComponentSubscriptionReferenceRepository.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" location="Interfaces/wsdl/NhincComponentConnectionManager.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" location="Interfaces/wsdl/AdapterNotificationConsumer.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" location="Interfaces/wsdl/NhincComponentInternalAuditRepository.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="AuditRepoPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" partnerLinkType="tns:NhincComponentInternalAuditRepository" partnerRole="NhincComponentInternalAuditRepositoryPortTypeRole"/>
        <partnerLink name="PropertyAccessorPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" partnerLinkType="tns:NhincComponentPropAccessor" partnerRole="NhincComponentPropAccessorPortTypeRole"/>
        <partnerLink name="SubscriptionDtePL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" partnerLinkType="tns:NhincComponentInternalSubscriptionDte" partnerRole="NhincComponentInternalSubscriptionDtePortTypeRole"/>
        <partnerLink name="SubscriptionRefRepoPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" partnerLinkType="tns:NhincComponentSubscriptionReferenceRepository" partnerRole="NhincComponentSubscriptionReferenceRepositoryPortTypeRole"/>
        <partnerLink name="ConnectionManagerPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" partnerLinkType="tns:NhincComponentConnectionManager" partnerRole="NhincComponentConnectionManagerPortTypeRole"/>
        <partnerLink name="AdapterNotifyPL" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" partnerLinkType="tns:AdapterNotificationConsumer" partnerRole="AdapterNotificationConsumerPortTypeRole"/>
        <partnerLink name="NhincNotifyPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincsubscription" partnerLinkType="tns:NhincHiemNotify" myRole="NhincHiemNotifyRole"/>
    </partnerLinks>
    <variables>
        <variable name="RetrieveBySubRefOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveBySubscriptionReferenceResponse"/>
        <variable name="RetrieveBySubRefIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveBySubscriptionReferenceRequest"/>
        <variable name="TransformNotifyToSubRefOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:TransformNhinNotifyToInternalSubscriptionReferenceResponseMessage"/>
        <variable name="TransformNotifyToSubRefIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:TransformNhinNotifyToInternalSubscriptionReferenceRequestMessage"/>
        <variable name="GetHcidPropertyOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" messageType="tns:GetPropertyResponseMessage"/>
        <variable name="GetHcidPropertyIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" messageType="tns:GetPropertyRequestMessage"/>
        <variable name="GetAdapterEndpointOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameResponseMessage"/>
        <variable name="GetAdapterEndpointIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameRequestMessage"/>
        <variable name="GetAdapterPassthruEndpointOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameResponseMessage"/>
        <variable name="GetAdapterPassthruEndpointIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameRequestMessage"/>
        <variable name="NotifyIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincsubscription" messageType="tns:NotifyRequestMessage"/>
    </variables>
    <sequence>
        <receive name="ReceiveNhincNotify" createInstance="yes" partnerLink="NhincNotifyPL" operation="Notify" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincsubscription" portType="tns:NotificationConsumer" variable="NotifyIn"/>
        <scope name="ProcessNotifyScope">
            <variables>
                <variable name="LogAdapterPtNotifyRespOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogAdapterPtNotifyRespIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEntityNotifyRespRequestMessage"/>
                <variable name="LogAdapterPtNotifyRequestOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogAdapterPtNotifyRequestIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogNhinNotifyRequestMessage"/>
                <variable name="LogNhinNotifyRequestOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogNhinNotifyRequestIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogNhinNotifyRequestMessage"/>
                <variable name="NotifySubscribersOfCdcBioPackageOut" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" messageType="tns:NotifySubscribersOfCdcBioPackageResponseMessage"/>
                <variable name="NotifySubscribersOfCdcBioPackageIn" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" messageType="tns:NotifySubscribersOfCdcBioPackageRequestMessage"/>
                <variable name="CreateAgencyNotifyCdcBioPackageOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateAgencyNotifyCdcBioPackageResponseMessage"/>
                <variable name="CreateAgencyNotifyCdcBioPackageIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateAgencyNotifyCdcBioPackageRequestMessage"/>
                <variable name="NotifySubscribersOfDocumentOut" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" messageType="tns:NotifySubscribersOfDocumentResponseMessage"/>
                <variable name="NotifySubscribersOfDocumentIn" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" messageType="tns:NotifySubscribersOfDocumentRequestMessage"/>
                <variable name="CreateAgencyNotifyDocOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateAgencyNotifyDocumentResponseMessage"/>
                <variable name="CreateAgencyNotifyDocIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateAgencyNotifyDocumentRequestMessage"/>
                <variable name="DetermineTopicOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:DetermineRootTopicFromNotifyResponseMessage"/>
                <variable name="DetermineTopicIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:DetermineRootTopicFromNotifyRequestMessage"/>
                <variable name="RetrieveByAgencySubRefOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveBySubscriptionReferenceResponse"/>
                <variable name="RetrieveByAgencySubRefIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" messageType="tns:RetrieveBySubscriptionReferenceRequest"/>
            </variables>
            <sequence name="ProcessNotifySeq">
                <assign name="AssignAuditNhinNotify">
                    <copy>
                        <from>$NotifyIn.NotifyRequest/wsnt:Notify</from>
                        <to>$LogNhinNotifyRequestIn.LogNhinNotifyRequest/hiemauditlog:message/wsnt:Notify</to>
                    </copy>
                    <copy>
                        <from>$NotifyIn.NotifyRequest/nhinccommonintorch:assertion</from>
                        <to>$LogNhinNotifyRequestIn.LogNhinNotifyRequest/hiemauditlog:message/nhinccommonintorch:assertion</to>
                    </copy>
                    <copy>
                        <from>'Nhin'</from>
                        <to>$LogNhinNotifyRequestIn.LogNhinNotifyRequest/auditlog:interface</to>
                    </copy>
                    <copy>
                        <from>'Inbound'</from>
                        <to>$LogNhinNotifyRequestIn.LogNhinNotifyRequest/auditlog:direction</to>
                    </copy>
                </assign>
                <invoke name="InvokeAuditNhinNotify" partnerLink="AuditRepoPL" operation="LogNhinNotifyRequest" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" portType="tns:NhincComponentInternalAuditRepositoryPortType" inputVariable="LogNhinNotifyRequestIn" outputVariable="LogNhinNotifyRequestOut"/>
                <assign name="AssignLocalHcidProperty">
                    <copy>
                        <from>'gateway'</from>
                        <to>$GetHcidPropertyIn.GetPropertyRequest/propacc:propertyFile</to>
                    </copy>
                    <copy>
                        <from>'localHomeCommunityId'</from>
                        <to>$GetHcidPropertyIn.GetPropertyRequest/propacc:propertyName</to>
                    </copy>
                </assign>
                <invoke name="InvokeLocalHcidProperty" partnerLink="PropertyAccessorPL" operation="GetProperty" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" portType="tns:NhincComponentPropAccessorPortType" inputVariable="GetHcidPropertyIn" outputVariable="GetHcidPropertyOut"/>
                <empty name="Placeholder_PE"/>
                <assign name="AssignTransformToSubRef">
                    <copy>
                        <from>$NotifyIn.NotifyRequest/wsnt:Notify</from>
                        <to>$TransformNotifyToSubRefIn.TransformNhinNotifyToInternalSubscriptionReference/wsnt:Notify</to>
                    </copy>
                </assign>
                <invoke name="InvokeTransformToSubRef" partnerLink="SubscriptionDtePL" operation="TransformNhinNotifyToInternalSubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="TransformNotifyToSubRefIn" outputVariable="TransformNotifyToSubRefOut"/>
                <assign name="AssignRetrieveSubRef">
                    <copy>
                        <from>$TransformNotifyToSubRefOut.TransformNhinNotifyToInternalSubscriptionReference/nccommonsub:SubscriptionReference</from>
                        <to>$RetrieveBySubRefIn.RetrieveBySubscriptionReferenceMessage/nccommonsub:SubscriptionReference</to>
                    </copy>
                </assign>
                <invoke name="InvokeRetrieveSubRef" partnerLink="SubscriptionRefRepoPL" operation="RetrieveBySubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" portType="tns:NhincComponentSubscriptionReferenceRepositoryPortType" inputVariable="RetrieveBySubRefIn" outputVariable="RetrieveBySubRefOut"/>
                <assign name="AssignRetrieveParentSubRef">
                    <copy>
                        <from>$RetrieveBySubRefOut.SubscriptionItem/nccommonsub:ParentSubscriptionReference</from>
                        <to>$RetrieveByAgencySubRefIn.RetrieveBySubscriptionReferenceMessage/nccommonsub:SubscriptionReference</to>
                    </copy>
                </assign>
                <invoke name="InvokeRetrieveParentSubRef" partnerLink="SubscriptionRefRepoPL" operation="RetrieveBySubscriptionReference" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentsubscriptionreferencerepository" portType="tns:NhincComponentSubscriptionReferenceRepositoryPortType" inputVariable="RetrieveByAgencySubRefIn" outputVariable="RetrieveByAgencySubRefOut"/>
                <assign name="AssignAdapterEndptLookup">
                    <copy>
                        <from>$GetHcidPropertyOut.GetPropertyResponse/propacc:propertyValue</from>
                        <to>$GetAdapterEndpointIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:homeCommunity/nccommon:homeCommunityId</to>
                    </copy>
                    <copy>
                        <from>'adapternotificationconsumer'</from>
                        <to>$GetAdapterEndpointIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:serviceName</to>
                    </copy>
                </assign>
                <invoke name="InvokeAdapterEndptLookup" partnerLink="ConnectionManagerPL" operation="GetConnectionInfoEndpointByServiceName" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" portType="tns:NhincComponentConnectionManagerPortType" inputVariable="GetAdapterEndpointIn" outputVariable="GetAdapterEndpointOut"/>
                <assign name="AssignDetermineTopic">
                    <copy>
                        <from>$NotifyIn.NotifyRequest/wsnt:Notify</from>
                        <to>$DetermineTopicIn.DetermineRootTopicFromNotify/wsnt:Notify</to>
                    </copy>
                </assign>
                <invoke name="InvokeDetermineTopic" partnerLink="SubscriptionDtePL" operation="DetermineRootTopicFromNotify" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="DetermineTopicIn" outputVariable="DetermineTopicOut"/>
                <if name="DetermineTopic">
                    <condition>$DetermineTopicOut.DetermineRootTopicFromNotify/subdte:RootTopic = 'document'</condition>
                    <sequence name="NotifyDocumentSeq">
                        <assign name="AssignCreateAgencyNotifyDoc">
                            <copy>
                                <from>$NotifyIn.NotifyRequest/wsnt:Notify</from>
                                <to>$CreateAgencyNotifyDocIn.CreateAgencyNotifyDocumentRequest/wsnt:Notify</to>
                            </copy>
                            <copy>
                                <from>$RetrieveByAgencySubRefOut.SubscriptionItem/nccommonsub:SubscriptionReference</from>
                                <to>$CreateAgencyNotifyDocIn.CreateAgencyNotifyDocumentRequest/nccommonsub:SubscriptionReference</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeCreateAgencyNotifyDoc" partnerLink="SubscriptionDtePL" operation="CreateAgencyNotifyDocument" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="CreateAgencyNotifyDocIn" outputVariable="CreateAgencyNotifyDocOut"/>
                        <assign name="AssignAdapterNotifyDoc">
                            <copy>
                                <from>bpel:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $GetAdapterEndpointOut.ConnectionInfoEndpoint/conninfo:serviceConnectionInfoEndpoints/conninfo:serviceConnectionInfoEndpoint/nccommon:EPR/nccommon:EndpointReference)</from>
                                <to partnerLink="AdapterNotifyPL"/>
                            </copy>
                            <copy>
                                <from>$CreateAgencyNotifyDocOut.CreateAgencyNotifyDocumentResponse/nccommonadapter:NotifySubscribersOfDocumentRequest/nccommonadapter:notify</from>
                                <to>$NotifySubscribersOfDocumentIn.NotifySubscribersOfDocumentRequest/nccommonadapter:notify</to>
                            </copy>
                            <copy>
                                <from>$NotifyIn.NotifyRequest/nhinccommonintorch:assertion</from>
                                <to>$NotifySubscribersOfDocumentIn.NotifySubscribersOfDocumentRequest/nccommonadapter:assertion</to>
                            </copy>
                        </assign>
                        <empty name="Placeholder_Audit_AdpDocReq"/>
                        <invoke name="InvokeAdapterNotifyDoc" partnerLink="AdapterNotifyPL" operation="NotifySubscribersOfDocument" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" portType="tns:AdapterNotificationConsumerPortType" inputVariable="NotifySubscribersOfDocumentIn" outputVariable="NotifySubscribersOfDocumentOut"/>
                        <empty name="Placeholder_Audit_AdpDocResp"/>
                    </sequence>
                    <elseif>
                        <condition>$DetermineTopicOut.DetermineRootTopicFromNotify/subdte:RootTopic = 'nhin-cdc:CdcBioPackage'</condition>
                        <sequence name="NotifyCdcSeq">
                            <assign name="AssignCreateCdcBioPackageNotify">
                                <copy>
                                    <from>$NotifyIn.NotifyRequest/wsnt:Notify</from>
                                    <to>$CreateAgencyNotifyCdcBioPackageIn.CreateAgencyNotifyCdcBioPackage/wsnt:Notify</to>
                                </copy>
                                <copy>
                                    <from>$RetrieveByAgencySubRefOut.SubscriptionItem/nccommonsub:SubscriptionReference</from>
                                    <to>$CreateAgencyNotifyCdcBioPackageIn.CreateAgencyNotifyCdcBioPackage/nccommonsub:SubscriptionReference</to>
                                </copy>
                            </assign>
                            <invoke name="InvokeCreateCdcBioPackageNotify" partnerLink="SubscriptionDtePL" operation="CreateAgencyNotifyCdcBioPackage" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="CreateAgencyNotifyCdcBioPackageIn" outputVariable="CreateAgencyNotifyCdcBioPackageOut"/>
                            <assign name="AssignAdapterNotifyCdcDoc">
                                <copy>
                                    <from>bpel:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $GetAdapterEndpointOut.ConnectionInfoEndpoint/conninfo:serviceConnectionInfoEndpoints/conninfo:serviceConnectionInfoEndpoint/nccommon:EPR/nccommon:EndpointReference)</from>
                                    <to partnerLink="AdapterNotifyPL"/>
                                </copy>
                                <copy>
                                    <from>$NotifyIn.NotifyRequest/nhinccommonintorch:assertion</from>
                                    <to>$NotifySubscribersOfCdcBioPackageIn.NotifySubscribersOfCdcBioPackageRequest/nccommonadapter:assertion</to>
                                </copy>
                                <copy>
                                    <from>$CreateAgencyNotifyCdcBioPackageOut.CreateAgencyNotifyCdcBioPackage/nccommonadapter:NotifySubscribersOfCdcBioPackageRequest/nccommonadapter:notify</from>
                                    <to>$NotifySubscribersOfCdcBioPackageIn.NotifySubscribersOfCdcBioPackageRequest/nccommonadapter:notify</to>
                                </copy>
                            </assign>
                            <empty name="Placeholder_Audit_AdpCdcReq"/>
                            <invoke name="InvokeAdapterNotifyCdcDoc" partnerLink="AdapterNotifyPL" operation="NotifySubscribersOfCdcBioPackage" xmlns:tns="urn:gov:hhs:fha:nhinc:adapternotificationconsumer" portType="tns:AdapterNotificationConsumerPortType" inputVariable="NotifySubscribersOfCdcBioPackageIn" outputVariable="NotifySubscribersOfCdcBioPackageOut"/>
                            <empty name="Placeholder_Audit_AdpCdcResp"/>
                        </sequence>
                    </elseif>
                    <else>
                        <empty name="UnknownTopic">
                            <sxt:trace>
                                <sxt:log level="warning" location="onStart">
                                    <bpel:from>concat('An Unknown topic was received: ', $DetermineTopicOut.DetermineRootTopicFromNotify/subdte:RootTopic)</bpel:from>
                                </sxt:log>
                            </sxt:trace>
                        </empty>
                    </else>
                </if>
            </sequence>
        </scope>
    </sequence>
</process>
