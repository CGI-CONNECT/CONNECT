<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="NhincDocQueryEJB" default="default" basedir="." xmlns:ejbjarproject="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
    <description>Builds, tests, and runs the project NhincDocQueryEJB.</description>
	<import file="../../../build.lib.xml" />

    <import file="nbproject/build-impl.xml"/>

    <property name="deploy.type" value="ejb" />
    <property name="deploy.isDeployable" value="true"/>

	<target name="build">
	<property name="target-to-call" value="dist" />
	<antcall target="call-target-in-isolation-if-out-of-date" />
	</target>
	<target name="clean-build" depends="clean,dist" />
	<target name="clean-test" depends="clean,dist" />
	<target name="build-test" depends="dist" />		
    
    <!-- Had to pull this out of jaxws-build.xml because it copied the wsdl, but for some reason it 
         did not copy the schemas.  We have to copy the schemas ourselves or it will not deploy.  -->
    <target name="wsimport-service-DocQuery" depends="wsimport-init">
<!--
        <wsimport xendorsed="true" sourcedestdir="${build.generated.dir}/wsimport/service" extension="true" verbose="true" destdir="${build.generated.dir}/wsimport/binaries" wsdl="${basedir}/${meta.inf}/xml-resources/web-services/DocQuery/wsdl/NhinDocQuery.wsdl" catalog="catalog.xml"/>
-->
        <echo message="copy wsdl's" />        
        <copy todir="${basedir}/${meta.inf}/wsdl/DocQuery">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/DocQuery/wsdl/"/>
        </copy>
        
        <echo message="copy schemas" />
        <copy todir="${basedir}/${meta.inf}/wsdl/schemas/">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/DocQuery/schemas/" />
        </copy>
    </target>
    
    <target name="wsimport-client-NhincDocQuery" depends="wsimport-init">
<!--
        <wsimport xendorsed="true" sourcedestdir="${build.generated.dir}/wsimport/client" extension="true" destdir="${build.generated.dir}/wsimport/binaries" wsdl="${basedir}/${meta.inf}/xml-resources/web-service-references/NhincDocQuery/wsdl/NhincDocQuery.wsdl" wsdlLocation="file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/NhincDocQuery.wsdl" catalog="catalog.xml"/>
        <echo message="generating binaries for referenced wsdl"/>        
        <copy todir="${classes.dir}">
            <fileset dir="${build.generated.dir}/wsimport/binaries" includes="**/*.xml"/>
        </copy>
-->        
        <echo message="copy wsdl's" />
        <copy todir="${basedir}/${meta.inf}/wsdl/client/NhincDocQuery">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-service-references/NhincDocQuery/wsdl/"/>
        </copy>
        
        <echo message="copy schemas" />
        <copy todir="${basedir}/${meta.inf}/wsdl/client/schemas/">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-service-references/NhincDocQuery/schemas/" />
        </copy>
    </target>
    
    
    <target depends="init" if="no.dist.ear.dir" name="-deps-module-jar" unless="no.deps">
        <property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.AuditRepositoryProxyImpl.Absolute" location="${project.AuditRepositoryProxyImpl}"/>
        <property name="project.AuditRepositoryProxy.Absolute" location="${project.AuditRepositoryProxy}"/>
        <property name="project.PolicyEngineProxyImpl.Absolute" location="${project.PolicyEngineProxyImpl}"/>
        <property name="project.PolicyEngineProxy.Absolute" location="${project.PolicyEngineProxy}"/>

        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.AuditRepositoryProxyImpl.Absolute}" antfile="${project.AuditRepositoryProxyImpl.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.AuditRepositoryProxy.Absolute}" antfile="${project.AuditRepositoryProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.PolicyEngineProxyImpl.Absolute}" antfile="${project.PolicyEngineProxyImpl.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.PolicyEngineProxy.Absolute}" antfile="${project.PolicyEngineProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
    </target>
    <target depends="init" if="dist.ear.dir" name="-deps-ear-jar" unless="no.deps">
        <property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.AuditRepositoryProxyImpl.Absolute" location="${project.AuditRepositoryProxyImpl}"/>
        <property name="project.AuditRepositoryProxy.Absolute" location="${project.AuditRepositoryProxy}"/>
        <property name="project.PolicyEngineProxyImpl.Absolute" location="${project.PolicyEngineProxyImpl}"/>
        <property name="project.PolicyEngineProxy.Absolute" location="${project.PolicyEngineProxy}"/>
    		
        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.AuditRepositoryProxyImpl.Absolute}" antfile="${project.AuditRepositoryProxyImpl.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.AuditRepositoryProxy.Absolute}" antfile="${project.AuditRepositoryProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.PolicyEngineProxyImpl.Absolute}" antfile="${project.PolicyEngineProxyImpl.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.PolicyEngineProxy.Absolute}" antfile="${project.PolicyEngineProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
    </target>
    
     <target depends="init" if="no.dist.ear.dir" name="deps-clean" unless="no.deps">
    	<property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.AuditRepositoryProxyImpl.Absolute" location="${project.AuditRepositoryProxyImpl}"/>
        <property name="project.AuditRepositoryProxy.Absolute" location="${project.AuditRepositoryProxy}"/>
        <property name="project.AdapterDocQueryProxyImpl.Absolute" location="${project.AdapterDocQueryProxyImpl}"/>
        <property name="project.PolicyEngineProxyImpl.Absolute" location="${project.PolicyEngineProxyImpl}"/>
        <property name="project.PolicyEngineProxy.Absolute" location="${project.PolicyEngineProxy}"/>
    		
        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.AuditRepositoryProxyImpl.Absolute}" antfile="${project.AuditRepositoryProxyImpl.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.AuditRepositoryProxy.Absolute}" antfile="${project.AuditRepositoryProxy.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.PolicyEngineProxyImpl.Absolute}" antfile="${project.PolicyEngineProxyImpl.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.PolicyEngineProxy.Absolute}" antfile="${project.PolicyEngineProxy.Absolute}/build.xml" inheritall="false" target="clean"/>
    </target>
    
    
    <target depends="compile" name="library-inclusion-in-archive">
        <copy file="${reference.NhincSamlTokenLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.NhincLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.NhincDataTransformsLib.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.AuditRepositoryProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.AuditRepositoryProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.AdapterServiceProxy.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.PolicyEngineProxyImpl.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.PolicyEngineProxy.jar}" todir="${build.classes.dir}"/>
    </target>
    <target depends="compile" name="library-inclusion-in-manifest">
        <basename file="${reference.NhincSamlTokenLib.jar}" property="included.lib.reference.NhincSamlTokenLib.jar"/>
        <copy file="${reference.NhincSamlTokenLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${reference.NhincLib.jar}" property="included.lib.reference.NhincLib.jar"/>
        <copy file="${reference.NhincLib.jar}" todir="${dist.ear.dir}"/>
        <basename file="${reference.NhincDataTransformsLib.jar}" property="included.lib.reference.NhincLib.jar"/>
        <copy file="${reference.NhincDataTransformsLib.jar}" todir="${dist.ear.dir}"/>
		<basename file="${reference.AuditRepositoryProxyImpl.jar}" property="included.lib.reference.AuditRepositoryProxyImpl.jar"/>
        <copy file="${reference.AuditRepositoryProxyImpl.jar}" todir="${dist.ear.dir}"/>
		<basename file="${reference.AuditRepositoryProxy.jar}" property="included.lib.reference.AuditRepositoryProxy.jar"/>
        <copy file="${reference.AuditRepositoryProxy.jar}" todir="${dist.ear.dir}"/>
		<basename file="${file.reference.AdapterServiceProxy.jar}" property="included.lib.reference.AdapterServiceProxy.jar"/>
        <copy file="${file.reference.AdapterServiceProxy.jar}" todir="${dist.ear.dir}"/>
		<basename file="${reference.PolicyEngineProxyImpl.jar}" property="included.lib.reference.PolicyEngineProxyImpl.jar"/>
        <copy file="${reference.PolicyEngineProxyImpl.jar}" todir="${dist.ear.dir}"/>
		<basename file="${reference.PolicyEngineProxy.jar}" property="included.lib.reference.PolicyEngineProxy.jar"/>
        <copy file="${reference.PolicyEngineProxy.jar}" todir="${dist.ear.dir}"/>
        <manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${included.lib.reference.NhincSamlTokenLib.jar}
                                                ${included.lib.reference.NhincLib.jar}
                                                ${included.lib.reference.NhincDataTransformsLib.jar}
                                                ${included.lib.reference.AuditRepositoryProxyImpl.jar}
                                                ${included.lib.reference.AuditRepositoryProxy.jar}
                                                ${included.lib.reference.AdapterServiceProxy.jar}
                                                ${included.lib.reference.PolicyEngineProxyImpl.jar}
                                                ${included.lib.reference.PolicyEngineProxy.jar}"/>
        </manifest>
    </target>
	<target depends="init" if="netbeans.home" name="undeploy-clean" unless="from.commandline">
        <nbundeploy failOnError="false" startServer="false"/>
    </target>    
</project>
