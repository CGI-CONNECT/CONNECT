<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="EntityHiemSubscriptionProxyEJB" default="default" basedir="." xmlns:ejbjarproject="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
    <description>Builds, tests, and runs the project EntityHiemSubscriptionProxyEJB.</description>
    <import file="../../../../build.lib.xml"/>
    <import file="nbproject/build-impl.xml"/>
    <property name="deploy.type" value="ejb" />
    <property name="deploy.isDeployable" value="true"/>
	
    <target name="build">
        <property name="target-to-call" value="dist" />
        <antcall target="call-target-in-isolation-if-out-of-date" />
    </target>
    <target name="clean-build" depends="clean,dist" />
    <target name="clean-test" depends="clean,dist" />
    <target name="build-test" depends="dist" />
    
    
    <target name="wsimport-service-EntityNotifyService" depends="wsimport-init">

        <property name="targetLocation-EntityNotifyService" location="${meta.inf}/wsdl/EntityNotifyService"/>
        <property name="sourceLocation-EntityNotifyService" location="${meta.inf}/xml-resources/web-services/EntityNotifyService/wsdl/"/>
        <copy todir="${targetLocation-EntityNotifyService}">
            <fileset dir="${sourceLocation-EntityNotifyService}"/>
        </copy>
        <property name="targetLocation-EntityNotifyServiceSchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-EntityNotifyServiceSchemas" location="${meta.inf}/xml-resources/web-services/EntityNotifyService/schemas/"/>
        <copy todir="${targetLocation-EntityNotifyServiceSchemas}">
            <fileset dir="${sourceLocation-EntityNotifyServiceSchemas}"/>
        </copy>
    </target>
    <target name="wsimport-service-EntitySubscribeService" depends="wsimport-init">

        <property name="targetLocation-EntitySubscribeService" location="${meta.inf}/wsdl/EntitySubscribeService"/>
        <property name="sourceLocation-EntitySubscribeService" location="${meta.inf}/xml-resources/web-services/EntitySubscribeService/wsdl/"/>
        <copy todir="${targetLocation-EntitySubscribeService}">
            <fileset dir="${sourceLocation-EntitySubscribeService}"/>
        </copy>
        <property name="targetLocation-EntitySubscribeServiceSchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-EntitySubscribeServiceSchemas" location="${meta.inf}/xml-resources/web-services/EntitySubscribeService/schemas/"/>
        <copy todir="${targetLocation-EntitySubscribeServiceSchemas}">
            <fileset dir="${sourceLocation-EntitySubscribeServiceSchemas}"/>
        </copy>
    </target>
    
    <target name="wsimport-service-EntityUnsubscribeService" depends="wsimport-init">

        <property name="targetLocation-EntityUnsubscribeService" location="${meta.inf}/wsdl/EntityUnsubscribeService"/>
        <property name="sourceLocation-EntityUnsubscribeService" location="${meta.inf}/xml-resources/web-services/EntityUnsubscribeService/wsdl/"/>
        <copy todir="${targetLocation-EntityUnsubscribeService}">
            <fileset dir="${sourceLocation-EntityUnsubscribeService}"/>
        </copy>
        <property name="targetLocation-EntityUnsubscribeServiceSchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-EntityUnsubscribeServiceSchemas" location="${meta.inf}/xml-resources/web-services/EntityUnsubscribeService/schemas/"/>
        <copy todir="${targetLocation-EntityUnsubscribeServiceSchemas}">
            <fileset dir="${sourceLocation-EntityUnsubscribeServiceSchemas}"/>
        </copy>
    </target>
    <target name="wsimport-service-ProxyHiemNotify" depends="wsimport-init">

		<property name="targetLocation-ProxyHiemNotify" location="${meta.inf}/wsdl/ProxyHiemNotify"/>
        <property name="sourceLocation-ProxyHiemNotify" location="${meta.inf}/xml-resources/web-services/ProxyHiemNotify/wsdl/"/>
        <copy todir="${targetLocation-ProxyHiemNotify}">
            <fileset dir="${sourceLocation-ProxyHiemNotify}"/>
        </copy>
		<property name="targetLocation-ProxyHiemNotifySchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-ProxyHiemNotifySchemas" location="${meta.inf}/xml-resources/web-services/ProxyHiemNotify/schemas/"/>
        <copy todir="${targetLocation-ProxyHiemNotifySchemas}">
            <fileset dir="${sourceLocation-ProxyHiemNotifySchemas}"/>
        </copy>
    </target>
    <target name="wsimport-service-ProxyHiemUnsubscribe" depends="wsimport-init">

        <property name="targetLocation-ProxyHiemUnsubscribe" location="${meta.inf}/wsdl/ProxyHiemUnsubscribe"/>
        <property name="sourceLocation-ProxyHiemUnsubscribe" location="${meta.inf}/xml-resources/web-services/ProxyHiemUnsubscribe/wsdl/"/>
        <copy todir="${targetLocation-ProxyHiemUnsubscribe}">
            <fileset dir="${sourceLocation-ProxyHiemUnsubscribe}"/>
        </copy>
        <property name="targetLocation-ProxyHiemUnsubscribeSchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-ProxyHiemUnsubscribeSchemas" location="${meta.inf}/xml-resources/web-services/ProxyHiemUnsubscribe/schemas/"/>
        <copy todir="${targetLocation-ProxyHiemUnsubscribeSchemas}">
            <fileset dir="${sourceLocation-ProxyHiemUnsubscribeSchemas}"/>
        </copy>
    </target>
    
    
    <target name="wsimport-service-ProxyHiemSubscribe" depends="wsimport-init">

        <property name="targetLocation-ProxyHiemSubscribe" location="${meta.inf}/wsdl/ProxyHiemSubscribe"/>
        <property name="sourceLocation-ProxyHiemSubscribe" location="${meta.inf}/xml-resources/web-services/ProxyHiemSubscribe/wsdl/"/>
        <copy todir="${targetLocation-ProxyHiemSubscribe}">
            <fileset dir="${sourceLocation-ProxyHiemSubscribe}"/>
        </copy>
        <property name="targetLocation-ProxyHiemSubscribeSchemas" location="${meta.inf}/wsdl/schemas/"/>
        <property name="sourceLocation-ProxyHiemSubscribeSchemas" location="${meta.inf}/xml-resources/web-services/ProxyHiemSubscribe/schemas/"/>
        <copy todir="${targetLocation-ProxyHiemSubscribeSchemas}">
            <fileset dir="${sourceLocation-ProxyHiemSubscribeSchemas}"/>
        </copy>
    </target>
    
    
    <target name="wsimport-client-EntityNotificationConsumerSecured" depends="wsimport-init"/>
    <target name="wsimport-client-EntitySubscriptionManagementSecured" depends="wsimport-init"/>
    <target name="wsimport-client-NhincProxyNotificationConsumerSecured" depends="wsimport-init"/>
    <target name="wsimport-client-NhincProxySubscriptionManagementSecured" depends="wsimport-init"/>
    
    <target depends="init" if="no.dist.ear.dir" name="-deps-module-jar" unless="no.deps">
        <property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.HiemUtilityLib.Absolute" location="${project.HiemUtilityLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.NhinHiemProxy.Absolute" location="${project.NhinHiemProxy}"/>

        <ant dir="${project.HiemUtilityLib.Absolute}" antfile="${project.HiemUtilityLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhinHiemProxy.Absolute}" antfile="${project.NhinHiemProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="jar"/>
    </target>
    <target depends="init" if="dist.ear.dir" name="-deps-ear-jar" unless="no.deps">
        <property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.HiemUtilityLib.Absolute" location="${project.HiemUtilityLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.NhinHiemProxy.Absolute" location="${project.NhinHiemProxy}"/>

        <ant dir="${project.HiemUtilityLib.Absolute}" antfile="${project.HiemUtilityLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhinHiemProxy.Absolute}" antfile="${project.NhinHiemProxy.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="jar"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="jar"/>
    </target>
    
    <target depends="init" if="no.dist.ear.dir" name="deps-clean" unless="no.deps">
        <property name="project.NhincLib.Absolute" location="${project.NhincLib}"/>
        <property name="project.NhincSamlTokenLib.Absolute" location="${project.NhincSamlTokenLib}"/>
        <property name="project.HiemUtilityLib.Absolute" location="${project.HiemUtilityLib}"/>
        <property name="project.NhincDataTransformsLib.Absolute" location="${project.NhincDataTransformsLib}"/>
        <property name="project.NhinHiemProxy.Absolute" location="${project.NhinHiemProxy}"/>

        <ant dir="${project.HiemUtilityLib.Absolute}" antfile="${project.HiemUtilityLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhinHiemProxy.Absolute}" antfile="${project.NhinHiemProxy.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhincDataTransformsLib.Absolute}" antfile="${project.NhincDataTransformsLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhincLib.Absolute}" antfile="${project.NhincLib.Absolute}/build.xml" inheritall="false" target="clean"/>
        <ant dir="${project.NhincSamlTokenLib.Absolute}" antfile="${project.NhincSamlTokenLib.Absolute}/build.xml" inheritall="false" target="clean"/>
    </target>
        
        
    <target depends="compile" name="library-inclusion-in-archive">
        <copyfiles files="${file.reference.NhincSAMLCallbackLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${reference.NhincSamlTokenLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${reference.NhincLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${reference.HiemUtilityLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.xercesImpl.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.xml-apis.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${file.reference.GatewayInternalComponentProxy.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${reference.NhincDataTransformsLib.jar}" todir="${build.classes.dir}"/>
        <copyfiles files="${reference.NhinHiemProxy.jar}" todir="${build.classes.dir}"/>
    </target>

    <target depends="compile" name="library-inclusion-in-manifest">
        <copyfiles files="${file.reference.NhincSAMLCallbackLib.jar}" manifestproperty="manifest.file.reference.NhincSAMLCallbackLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.NhincSamlTokenLib.jar}" manifestproperty="manifest.reference.NhincSamlTokenLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.NhincLib.jar}" manifestproperty="manifest.reference.NhincLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.HiemUtilityLib.jar}" manifestproperty="manifest.reference.HiemUtilityLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.HiemUtilityLib.jar}" manifestproperty="manifest.reference.HiemUtilityLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.xercesImpl.jar}" manifestproperty="manifest.file.reference.xercesImpl.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.xml-apis.jar}" manifestproperty="manifest.file.reference.xml-apis.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.NhincDataTransformsLib.jar}" manifestproperty="manifest.reference.NhincDataTransformsLib.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${reference.NhinHiemProxy.jar}" manifestproperty="manifest.reference.NhinHiemProxy.jar" todir="${dist.ear.dir}"/>
        <copyfiles files="${file.reference.GatewayInternalComponentProxy.jar}" manifestproperty="manifest.reference.GatewayInternalComponentProxy.jar" todir="${dist.ear.dir}"/>

        <manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${manifest.file.reference.NhincSAMLCallbackLib.jar} ${manifest.reference.NhincSamlTokenLib.jar} ${manifest.reference.NhincLib.jar} ${manifest.reference.HiemUtilityLib.jar} ${manifest.file.reference.xercesImpl.jar} ${manifest.file.reference.xml-apis.jar ${manifest.reference.PolicyEngineProxy.jar} ${manifest.reference.PolicyEngineProxyImpl.jar} ${manifest.reference.NhincDataTransformsLib.jar ${manifest.reference.NhinHiemProxy.jar ${manifest.reference.AuditRepositoryProxy.jar} ${manifest.reference.AuditRepositoryProxyImpl.jar} "/>
        </manifest>
    </target>
    <target depends="init" if="netbeans.home" name="undeploy-clean" unless="from.commandline">
        <nbundeploy failOnError="false" startServer="false"/>
    </target>
</project>
