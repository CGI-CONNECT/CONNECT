<?xml version="1.0"?>
<!-- 
vim:expandtab: softtabstop=4 shiftwidth=4 tabstop=4
-->
<!--
//*****************************************************************************
// FILE: win.source.build.xml
//
// Copyright (C) 2010 TBD
//
// CLASSIFICATION: Unclassified
//
// DESCRIPTION: build.xml used by AntInstaller
//
// LIMITATIONS: None
//
// CHANGE HISTORY:
//
// Date         Proj   Act    Assign     Desc
// ============ ====== ====== ========== ======================================
// 2010/04/15   964G   1000   ckempton   Initial coding (modified binary build
//                                       file to work with source)
// 2010/04/29   964G   1000   bgrantha   Automated deployment
// 
//*****************************************************************************
-->
<project name="Installation" default="" basedir=".">

    <!-- 
    Claim: This is required to pick up the properties generated during the install pages
    Actual: Not necessary for property retrieval - and can not be read from here (bug)
    -->
    <!-- 
    <property file="./ant.install.properties" />
    -->

    <!-- Ant Contrib -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" />

    <!-- Env -->
    <property environment="env" />

    <!-- build/source specific -->
     <!-- source.version = source directory, e.g 2.4 -->
     <!-- url.win.source.tag = source download tag path, e.g. tags/2.4.0.271/ -->
    <property name="source.version" value="Current" />
    <property name="url.win.source.tag" value="Current" />

    <!-- Define properties (need to work out external properties file) -->
    <property name="expected.JAVA_HOME" value="C:\Java\jdk1.6.0_16" />
    <property name="expected.IDE_HOME" value="C:\Program Files\NetBeans 6.7.1" />
    <property name="expected.ANT_HOME" value="C:\Projects\NHINC\${source.version}\Build\Packages\Ant\Ant" />
    <property name="expected.AS_HOME" value="C:\Sun\AppServer" />

    <property name="expected.NHINC_PROPERTIES_DIR" value="C:\Sun\AppServer\domains\domain1\config\nhin" />

    <property name="expected.MYSQL_BIN" value="C:\Program Files\MySQL\MySQL Server 5.1\bin" />

    <property name="expected.ANT_OPTS" value="-Xmx872m -XX:MaxPermSize=640m -Dcom.sun.aas.instanceName=server" />


    <property name="expected.PATH.contains.ant" value="ant\bin" />
    <property name="expected.PATH.contains.ant2" value="ant/bin" />
    <property name="expected.PATH.contains.java" value="jdk1.6.0_16" />
    <property name="expected.PATH.contains.mysql" value="MySQL Server" />

    <property name="url.java" value="http://java.sun.com/products/archive/j2se/6u16/index.html" />
    <property name="url.netbeans.glassfish" value="http://netbeans.org/downloads/6.7.1/index.html" />
    <property name="url.metro" value="https://metro.dev.java.net/1.5/metro-1_5.jar" />
    <property name="url.mysql" value="http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.41-win32.msi/from/http:/opensource.become.com/mysql/" />
    <property name="url.mysql.tools" value="http://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-gui-tools-5.0-r17-win32.msi/from/http:/opensource.become.com/mysql/" />
    <property name="url.oid" value="http://developer.connectopensource.org/display/NHINR24/Request+Object+Identifier" />

    <property name="url.windows.source" value="https://svn.connectopensource.org:8443/svn/Nhin_Public/${url.win.source.tag}" />
    <property name="url.svn" value="http://www.open.collab.net/downloads/subversion" />

    
    <property name="directory.nhin.connect" value="C:\NHINC" />
    <property name="directory.nhin.connect.source" value="C:\Projects\NHINC\${source.version}" />
    <property name="directory.nhin.connect.source.third.party" value="${directory.nhin.connect.source}\ThirdParty" />
    <property name="directory.nhin.connect.source.third.party.tools" value="${directory.nhin.connect.source}\ThirdPartyTools" />

    <!-- Temporary workspace and working files -->
    <property name="temporary.directory.workspace" value="C:\TEMP\CONNECT-install" />

    <property name="temporary.file.windows.binary" value="${temporary.directory.workspace}\resources\zip\NHIN_CONNECT_Binaries_2.4.0.271.zip" />
    <property name="temporary.file.third.party.components" value="${temporary.directory.workspace}\resources\zip\NHIN_CONNECT_Third_Party_Components_2.4.0.zip" />

    <var name="path.contents" value="" />

    <!-- ******************************************************************************************** -->
    <!-- ********************************* Main Install Targets ************************************* -->
    <!-- ******************************************************************************************** -->

    <!-- Main Install Target -->
    <target name="connect-install" depends="validate, self-extract, download-windows-source, copy-libraries">
        <echo message="Begin main install target.. " />
        <echo message="Main install target done" />
    </target>

    <!-- Self Extract -->
    <target name="self-extract">
        <echo message="Begin self-extract task.." />
        <unzip src="${antinstaller.jar}" dest="${temporary.directory.workspace}">
            <patternset>
                <include name="/resources/bin/*" />
                <include name="/resources/txt/*" />
            </patternset>
        </unzip>
        <echo message="Self-extract done" />
    </target>

    <!-- Validation -->
    <target name="validate">
        <echo message="Begin validation.." />

        <!-- 
        This target was used before the installer was able to set ENV values 
        New function for this target TBD
        -->

        <echo message="Validation successful" />
    </target>


    <!--  Windows Source Download -->
    <target name="download-windows-source">
     
        <echo message="Begin checkout of windows source files.." />
      
        <svn>
            <checkout url="${url.windows.source}" destPath="${directory.nhin.connect.source}" />
        </svn>

        <echo message="Source checkout complete" />
    </target>


    <!-- Launch the gateway.properties file -->
    <target name="launch-gateway" depends="download-windows-source">
        <echo message="Begin launch gateway task.." />

        <!-- Gateway Properties (1) -->
        <exec executable="C:\WINDOWS\notepad.exe" failifexecutionfails="true" failonerror="true">
            <arg value="${directory.nhin.connect}\Dev\gateway.properties" />
        </exec>

        <!-- Gateway Properties (2, 3, 4, 5) to be done by user via (1) -->

        <echo message="End launch gateway task.." />
    </target>

    <!-- Copy Third Party Components -->
    <target name="copy-libraries" depends="">
        <echo message="Begin copy libraries task.." />

        <!-- 
        Install Third Party Components (1)
        Shutdown Glassfish
        -->
        <exec dir="${actual.AS_HOME}/bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c asadmin stop-domain domain1" />
        </exec>

        <!-- Install Third Party Components (2) -->
        <copy todir="${actual.ANT_HOME}\lib" overwrite="true">
            <fileset dir="${directory.nhin.connect.source.third.party}\AntExtraLibs">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\XStream">
                <include name="**/stax-1.2.0.jar" />
            </fileset>
        </copy>

        <!-- Install Third Party Components (3) -->
        <copy todir="${actual.AS_HOME}\lib" overwrite="true">
            <fileset dir="${directory.nhin.connect.source.third.party}\C3PO">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\log4j">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\HibernateLibraries">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\MySQLDB">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\XStream">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\SpringFramework">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${directory.nhin.connect.source.third.party}\Xerces">
                <include name="**/*.jar" />
            </fileset>
        </copy>

        <!-- 
        Install Third Party Components (4)
        Start Glassfish
        -->
        <!--
        <exec dir="${actual.AS_HOME}/bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c asadmin start-domain domain1" />
        </exec>
        -->

        <echo message="End copy libraries task" />
    </target>



    <!-- ******************************************************************************************** -->
    <!-- ******************************* Optional Install Targets *********************************** -->
    <!-- ******************************************************************************************** -->

    <!-- Create Database Schemas and Tables -->
    <target name="create-db">
        <echo message="Begin create-db task.." />

        <exec executable="${temporary.directory.workspace}\resources\bin\createdb.bat" failifexecutionfails="true" failonerror="true">
            <!-- ARG 1 : NHIN extract dir -->
            <arg value="${directory.nhin.connect.source}\Product" />
            <!-- ARG 2 : MYSQL_BIN -->
            <arg value="${expected.MYSQL_BIN}" />
        </exec>

        <echo message="End create-db task.." />
    </target>
    
    <!-- Build:  temporarily commented out -->

    <target name="build-NHINC">
        <echo message="Begin build task.." />
        <echo message=" cd ${directory.nhin.connect.source}\Product" />
        <exec executable="${temporary.directory.workspace}\resources\bin\win_source_build_connect.bat" failifexecutionfails="true" failonerror="true">
           <arg value="${directory.nhin.connect.source}\Product" />
        </exec>

        <echo message="End build task.." />
    </target>

    <!-- Deployment -->
    <target name="deployment">
        <echo message="Begin deployment task.." />

        <!-- Deploying Applications to GlassFish -->
        <exec executable="${temporary.directory.workspace}\resources\bin\win.source.deploy.bat" failifexecutionfails="true" failonerror="true" vmlauncher="false">
            <!-- ARG 1 : AS_HOME -->
            <arg value="${actual.AS_HOME}" />
            <!-- ARG 2 : IDE_HOME -->
            <arg value="${actual.IDE_HOME}" />
            <!-- ARG 3 : ANT_HOME -->
            <arg value="${actual.ANT_HOME}" />
            <!-- ARG 4 : ANT_OPTS -->
            <arg value="${actual.ANT_OPTS}" />
            <!-- ARG 5 : NHINC_PROPERTIES_DIR -->
            <arg value="${actual.NHINC_PROPERTIES_DIR}" />
            <!-- ARG 6 : JAVA_HOME -->
            <arg value="${actual.JAVA_HOME}" />
            <!-- ARG 7 : NHIN source\Product dir -->
            <arg value="${directory.nhin.connect.source}\Product" />
            <!-- ARG 8 : NHINC_THIRDPARTY_DIR -->
            <arg value="${directory.nhin.connect.source.third.party}" />
        </exec>

        <!-- Start GlassFish -->
        <echo message="Starting the domain.. this process will be spawned" />
        <exec dir="${actual.AS_HOME}/bin" executable="cmd.exe" spawn="true">
            <arg line="/c asadmin start-domain domain1" />
        </exec>

        <echo message="End deployment task.." />
    </target>

    <!-- ******************************************************************************************** -->
    <!-- ********************************* Post Install Targets ************************************* -->
    <!-- ******************************************************************************************** -->

    <!-- Post Install Cleaup -->
    <target name="cleanup">
        <echo message="Begin cleanup.. " />

        <!-- Launch document -->
        <exec executable="C:\WINDOWS\notepad.exe" spawn="true">
            
            <arg value="${temporary.directory.workspace}\resources\txt\win-source-installComplete.txt" />
        </exec>

        <!-- Just enough time to make sure notepad opens the file before deleting -->
        <sleep seconds="4" />

        <!-- Cleanup working directory -->
        <delete dir="${temporary.directory.workspace}" />

        <echo message="Cleanup complete" />
    </target>

    <!-- ******************************************************************************************** -->
    <!-- ********************************* AntInstaller Targets ************************************* -->
    <!-- ******************************************************************************************** -->


    <!-- Initial setup task -->
    <target name="antinstaller-setup">
        <!-- AntInstaller properties -->
        <antinstaller-property name="expected.JAVA_HOME" value="${expected.JAVA_HOME}" />
        <antinstaller-property name="expected.ANT_OPTS" value="${expected.ANT_OPTS}" />
        <antinstaller-property name="expected.ANT_HOME" value="${expected.ANT_HOME}" />
        <antinstaller-property name="expected.IDE_HOME" value="${expected.IDE_HOME}" />
        <antinstaller-property name="expected.AS_HOME" value="${expected.AS_HOME}" />
        <antinstaller-property name="expected.NHINC_PROPERTIES_DIR" value="${expected.NHINC_PROPERTIES_DIR}" />

        <!-- AntInstaller property source directory, must match build property source.version  e.g. 2.4-->
        <antinstaller-property name="source.version#" value="Current" />

        <antinstaller-property name="directory.nhin.connect" value="C:\NHINC" />
        <antinstaller-property name="directory.nhin.connect.source" value="C:\Projects\NHINC\Current" />
        <antinstaller-property name="directory.nhin.connect.source.third.party" value="${directory.nhin.connect.source}\ThirdParty" />
        <antinstaller-property name="directory.nhin.connect.source.third.party.tools" value="${directory.nhin.connect.source}\ThirdPartyTools" />
      
        <!-- Create source and build directories -->
        <mkdir dir="${directory.nhin.connect}" />
        <mkdir dir="${directory.nhin.connect.source}" />
        <mkdir dir="${directory.nhin.connect.source.third.party}" />
        <mkdir dir="${directory.nhin.connect.source.third.party.tools}" />

 
        <!-- Extract helper files -->
        <unzip src="${antinstaller.jar}" dest="${temporary.directory.workspace}">
            <patternset>
                <include name="/resources/bin/*" />
                <include name="/resources/txt/*" />
            </patternset>
        </unzip>
    </target>

    <!-- antinstaller-version -->
    
    <target name="antinstaller-version">
        <echo message="Displaying version.." />

        <echo message="" />
        <echo message="  Version ${source.version#}" />
        <echo message="" />

        <echo message="Displaying version successful" />
    </target>   





    <!-- Set the ENV variables -->
    <target name="antinstaller-set-env" depends="antinstaller-update-path-for-ant-and-java">
         <!-- User Input -->
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat JAVA_HOME=${actual.JAVA_HOME}" />
        </exec>
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat IDE_HOME=${actual.IDE_HOME}" />
        </exec>
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat AS_HOME=${actual.AS_HOME}" />
        </exec>
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat NHINC_PROPERTIES_DIR=${actual.NHINC_PROPERTIES_DIR}" />
        </exec>
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat ANT_HOME=${actual.ANT_HOME}" />
        </exec>
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat ANT_OPTS=${actual.ANT_OPTS}" />
        </exec>



        <!-- Not Configurable -->
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat NHINC_THIRDPARTY_DIR=${directory.nhin.connect.source.third.party}" />
        </exec>
       <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat NHINC_SOURCE_DIR=${directory.nhin.connect.source}" />
        </exec>

    </target>

    <!-- Update PATH for ANT and JAVA -->
    <target name="antinstaller-update-path-for-ant-and-java">
        <!-- Get existing PATH value -->
        <if>
            <!-- If env var is "Path" -->
            <isset property="env.Path" />
            <then>
                <var name="path.contents" value="${env.Path}" />
            </then>

            <elseif>
                <!-- Elseif existing var is "PATH" -->
                <isset property="env.PATH" />
                <then>
                    <var name="path.contents" value="${env.PATH}" />
                </then>
            </elseif>
        </if>

        <!-- If path does not contain Ant, add it -->
        <if>
            <not>
                <or>
                    <contains string="${path.contents}" substring="${expected.PATH.contains.ant}" casesensitive="false" />
                    <contains string="${path.contents}" substring="${expected.PATH.contains.ant2}" casesensitive="false" />
                </or>
            </not>
            <then>
                <var name="path.contents" value="${path.contents};${actual.ANT_HOME}\bin" />
            </then>
        </if>

        <!-- If PATH does not contain Java, add it -->
        <if>
            <not>
                <contains string="${path.contents}" substring="${expected.PATH.contains.java}" casesensitive="false" />
            </not>
            <then>
                <var name="path.contents" value="${path.contents};${actual.JAVA_HOME}\bin" />
            </then>
        </if>

        <!-- Just in case something goes wrong, keep a copy of existing PATH -->
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat PATH_PRE_CONNECT=%PATH%" />
        </exec>
        <!-- Update PATH -->
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat PATH=${path.contents}" />
        </exec>
    </target>

    <!-- Update PATH for MySQL -->
    <target name="antinstaller-set-env-mysql">
        <!-- If PATH does not contain MySQL, add it -->
        <if>
            <not>
                <contains string="${path.contents}" substring="${expected.PATH.contains.mysql}" casesensitive="false" />
            </not>
            <then>
                <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
                    <arg line="/c setenv.bat PATH=${path.contents};${expected.MYSQL_BIN}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-0">
        <!-- Java -->
        <if>
            <equals arg1="${launch.browser.for.java}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.java}" />
        <exec dir="${temporary.directory.workspace}\resources\bin" executable="cmd.exe" failifexecutionfails="true" failonerror="true">
            <arg line="/c setenv.bat NHINC_SOURCE_DIR=${directory.nhin.connect.source}" />
        </exec>               </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-1">
        <!-- NetBeans / GlassFish -->
        <if>
            <equals arg1="${launch.browser.for.netbeans.glassfish}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.netbeans.glassfish}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-2">
        <!-- Metro -->
        <if>
            <equals arg1="${launch.browser.for.metro}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.metro}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-3">
        <!-- MySQL -->
        <if>
            <equals arg1="${launch.browser.for.mysql}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.mysql}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-4">
        <!-- MySQL Tools -->
        <if>
            <equals arg1="${launch.browser.for.mysql.tools}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.mysql.tools}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-5">
        <!-- OID -->
        <if>
            <equals arg1="${launch.browser.for.oid}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.oid}" />
                </exec>
            </then>
        </if>
    </target>

    <!-- Launch Browser(s) -->
    <target name="antinstaller-launch-browser-0a">
        <!-- OID -->
        <if>
            <equals arg1="${launch.browser.for.svn}" arg2="true" />
            <then>
                <exec executable="C:/Program Files/Internet Explorer/iexplore.exe" spawn="true">
                    <arg value="${url.svn}" />
                </exec>
            </then>
        </if>
    </target>
</project>
