<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Glassfish.Target">

  <include buildfile="../../Properties.build.xml" unless="${property::exists('Glassfish.HomeDir')}" />
  <include buildfile="GlassFish.Properties.xml" unless="${property::exists('Glassfish.AntDeployFileName')}" />

  <ifnot test="${target::exists('Ant.CompileSource')}">
    <include buildfile="${PackagesDirectory}\Ant\Ant.Target.xml"/>
  </ifnot>

  <property name="GlassFish.InteractiveDeploy" value="false"/>
  <property name="GlassFish.TargetIPAddress" value="${target.server}"/>
  <property name="GlassFish.TargetServer" value="\\${GlassFish.TargetIPAddress}"/>

  <target name="GlassFish.InteractiveDeploy">
    <property name="GlassFish.InteractiveDeploy" value="true"/>

    <call target="GlassFish.SetUp"/>

    <call target="Private.GlassFish.CheckForAndInstallLocalGlassFishInstall"/>

    <property name="CCNetRemotingUrl" value="tcp://${BuildServerHostName}:${BuildServerPort}/CruiseManager.rem"/>

    <ask
        answer="ProjectNameToPullFrom"
        caption="Which build project to pull from?"
        question="Which build project to pull from?">
      <options>
        <string value="${ProjectName}-${ProjectCodeLineName}"/>
        <string value="${ProjectName}-${ProjectCodeLineName} Nightly Build"/>
      </options>
    </ask>

    <strings id="goodbuilds"/>
    <call target="Private.GlassFish.FindGoodBuilds"/>

    <ask
        answer="BuildToDeploy"
        caption="Choose which build?"
        question="Choose which build  to deploy?">
      <options refid="goodbuilds" />
    </ask>

    <property name="CCNetLabel" value="${BuildToDeploy}"/>

    <call target="Private.GlassFish.FindBuildArchiveFolderName"/>

    <regex input="${BuildArchiveFolderName}" pattern="(?'Year'\d\d\d\d)(?'Month'\d\d)(?'Day'\d\d)"/>
    <property name="CCNetBuildDate" value="${Year}-${Month}-${Day}"/>

    <get
      dest="${Glassfish.HomeDir}\NHINC.zip"
      src="http://${BuildServerHostName}/${ProjectName}-${ProjectCodeLineName}/Artifacts/${BuildArchiveFolderName}/NHINC.zip"
      verbose="true"
    />

    <call target="GlassFish.DeployTgt" />
  </target>

  <target name="Private.GlassFish.CheckForAndInstallLocalGlassFishInstall" unless="${directory::exists(Glassfish.InstallDirectoryPath)}" >
    <largeproperty name="InstallGlassFish.Question">
      <value expand="true" xml="false">
        <![CDATA[A local GlassFish install is needed to perform this deployment (local or remote).
We are expecting to find GlassFish at ${Glassfish.InstallDirectoryPath} but it's not there.
May I install it there and continue with the deployment?]]>
      </value>
    </largeproperty>

    <ask
      answer="InstallGlassFish.Answer"
      caption="Install GlassFish?"
      question="${InstallGlassFish.Question}"
    >
      <options>
        <string value="Install"/>
        <string value="Exit"/>
      </options>
    </ask>

    <fail if="${InstallGlassFish.Answer == 'Exit'}"/>

    <exec program="${Glassfish.OpenEsbInstallFilePath}" />

    <fail
      message="Something went wrong? ${Glassfish.InstallDirectoryPath} still does not exist!"
      unless="${directory::exists(Glassfish.InstallDirectoryPath)}"
    />
  </target>

  <target name="Private.GlassFish.FindBuildArchiveFolderName">
    <loopthrough property="build">
      <items>
        <strings refid="builds"/>
      </items>
      <do>
        <trycatch>
          <try>
            <regex input="${build}" pattern="log(?'BuildArchiveFolderName'\d+)Lbuild\.${Label}\.xml$"/>
            <break/>
          </try>
          <catch/>
        </trycatch>
      </do>
    </loopthrough>
  </target>

  <target name="Private.GlassFish.FindGoodBuilds">
    <strings id="builds"/>

    <function execute="${ccnet::get-project-some-build-labels(CCNetRemotingUrl, ProjectNameToPullFrom, 15, 'builds') }"/>

    <property name="count" value="0"/>

    <loopthrough property="build">
      <items>
        <strings refid="builds"/>
      </items>
      <do>
        <trycatch>
          <try>
            <regex input="${build}" pattern="log\d+Lbuild\.(?'Label'.*)\.xml$"/>
            <function execute="${stringlist::add('goodbuilds', Label)}"/>
            <property name="count" value="${int::parse(count) + 1}"/>
          </try>
          <catch/>
        </trycatch>
        <break if="${int::parse(count) == 6}"/>
      </do>
    </loopthrough>
  </target>

  <target name="Private.GlassFish.Tag">
    <loadtasks assembly="${BuildDirectory}/nant/bin/DirectoryIndexingLib.dll"/>
    <DirIndex
      title="NHIN Connect Gateway"
      projectName="NHIE Framework"
      htmlOutputFile="${Glassfish.DeploymentServer}\glassfishesb\default.html"
      xmlOutputFile="${Glassfish.DeploymentServer}\glassfishesb\default.xml"
      xslt="packages\DirectoryIndexing\indexer.xslt"
      version="${CCNetLabel}"
      releaseDate="${CCNetBuildDate}"
      rootDirectory="${Glassfish.DeploymentServer}\glassfishesb"
		  releaseSummary="This delivery contains the core services for the NHIN Connect Gateway project"
		  tag="This deliverable contains the following content:"
    />
  </target>

  <target name="GlassFish.SetUp">
    <delete dir="${AntBuildLogDirectory}" if="${directory::exists(AntBuildLogDirectory)}" verbose="true"/>
    <mkdir dir="${AntBuildLogDirectory}" verbose="true"/>
  </target>

  <target name="GlassFish.TearDown">
  </target>

  <target name="GlassFish.CreateSfx">

    <largeproperty name="Batch.Content">
      <value expand="true" xml="false">
        <![CDATA[FOR /F "delims=" %%v IN ('cd') DO set BuildDirectory=%%v
nant\bin\nant.exe /f:Packages\Glassfish\GlassFish.Target.xml GlassFish.InteractiveDeploy -D:PackagesDirectory=%BuildDirectory%\Packages -D:BuildDirectory=%BuildDirectory% @Properties.build.txt
SET /P variable="Hit [Enter] exit."]]>
      </value>
    </largeproperty>

    <property name="Batch.FileName" value="DeployAppBuild.bat"/>
    <property name="Batch.FilePath" value="${BuildDirectory}\${Batch.FileName}"/>
    <echo message="${Batch.Content}" file="${Batch.FilePath}"/>

    <largeproperty name="SfxConfig.Content">
      <value expand="true" xml="false">
        <![CDATA[;The comment below contains SFX script commands

Setup=${Batch.FileName}
TempMode
Overwrite=1
Title=Deploy ${ProjectName}]]>
      </value>
    </largeproperty>

    <property name="SfxConfig.FilePath" value="${BuildDirectory}\SfxConfig.txt"/>
    <echo message="${SfxConfig.Content}" file="${SfxConfig.FilePath}"/>

    <property name="SfxGlassFish.PropertiesFilePath" value="${BuildDirectory}\Properties.build.txt"/>

    <saveproperties file="${SfxGlassFish.PropertiesFilePath}" format="CommandLine" >
      <property name="BuildServerHostName"/>
      <property name="BuildServerPort"/>
      <property name="LabelPrefix"/>
      <property name="EmailHost"/>
      <property name="ProjectName"/>
      <property name="ProjectCodeLineName"/>
      <property name="ProjectsDirectory"/>
      <property name="ProjectRootDirectory"/>
      <property name="ProjectCodeLineDirectory"/>
      <property name="ProductDirectory"/>
      <property name="ThirdPartyDirectory"/>
      <property name="ProductionDirectory"/>

      <property name="Compile.ConfigName"/>
      <property name="ArtifactRootDirectory" value="${ArtifactRootDirectory}"/>
      <property name="Common.ArtifactDirectoryPath"/>
      <property name="Common.ArtifactFolderName"/>
      <property name="Common.ReportDirectory"/>
      <property name="Common.TempDirectory"/>
      <property name="UnitTestDirectory"/>
      <property name="InstallDirectory"/>
    </saveproperties>

    <property name="WinRarProgramPath" value="${environment::get-variable('ProgramFiles')}\winrar\winrar.exe" overwrite="false"/>

    <mkdir dir="${BuildDirectory}\dashboard\Deployment" />
    <property name="DeploymentExe.FilePath" value="${BuildDirectory}\dashboard\Deployment\${ProjectName}-${ProjectCodeLineName}-Deployment.exe"/>

    <delete file="${DeploymentExe.FilePath}" if="${file::exists(DeploymentExe.FilePath)}" />
    <exec program="${WinRarProgramPath}"
					commandline='a -ibck -r "${DeploymentExe.FilePath}" nAnt c -z"${SfxConfig.FilePath}" -sfx'
					workingdir='${BuildDirectory}'/>

    <foreach item='File' property='File'>
      <in>
        <items basedir='${BuildDirectory}'>
          <include name='Properties.build.txt'/>
          <include name='${Batch.FileName}'/>
          <include name='Packages\Ant\**\*'/>
          <include name='Packages\Glassfish\**\*'/>
          <include name='Packages\DirectoryIndexing\**\*'/>
        </items>
      </in>
      <do>
        <property name='FileToAdd' value=".\${string::replace(File, BuildDirectory, '')}"/>
        <exec program="${WinRarProgramPath}"
				commandline='u -ibck -r "${DeploymentExe.FilePath}" ${FileToAdd} c -z"${SfxConfig.FilePath}" -sfx'
				workingdir='${BuildDirectory}' verbose='true'/>
      </do>
    </foreach>

    <delete file="${Batch.FilePath}" />
    <delete file="${SfxConfig.FilePath}" />
    <delete file="${SfxGlassFish.PropertiesFilePath}" />
  </target>

  <target name="GlassFish.DeployTgt">
    <echo message="Deploying to IP = ${GlassFish.TargetIPAddress}"/>

    <trycatch>
      <try>

        <ifthenelse test="${GlassFish.InteractiveDeploy}">
          <then>
            <exec program="${Ant.Bat}" failonerror="true">
              <environment refid="${Ant.Environment.RefId}" />
              <arg line="deploy -buildfile ${Glassfish.AntDeployFileName}" />
              <arg line="-DTARGET_IP=${GlassFish.TargetIPAddress}" />
            </exec>
          </then>
          <else>
            <echo message="Un-Deploying applications first."/>
            <exec program="${Ant.Bat}" failonerror="true">
              <environment refid="${Ant.Environment.RefId}" />
              <arg line="undeploy -buildfile ${Glassfish.AntDeployFileName}" />
              <arg line="-DTARGET_IP=${GlassFish.TargetIPAddress}" />
              <arg line="-logger org.apache.tools.ant.XmlLogger" />
              <arg line="-logfile ${AntBuildLogFile}" />
            </exec>
            <echo message="Deploying applications now."/>
            <exec program="${Ant.Bat}" failonerror="true">
              <environment refid="${Ant.Environment.RefId}" />
              <arg line="deploy -buildfile ${Glassfish.AntDeployFileName}" />
              <arg line="-DTARGET_IP=${GlassFish.TargetIPAddress}" />
              <arg line="-logger org.apache.tools.ant.XmlLogger" />
              <arg line="-logfile ${AntBuildLogFile}" />
            </exec>
          </else>
        </ifthenelse>

        <servicecontroller
          machine ="${GlassFish.TargetIPAddress}"
          action="Stop"
          service="${Glassfish.ServiceName}"
          timeout ="120000"
        />

      </try>
      <finally>
        <servicecontroller
          machine ="${GlassFish.TargetIPAddress}"
          action="Start"
          service="${Glassfish.ServiceName}"
          timeout ="120000"
        />
      </finally>
    </trycatch>
  </target>

</project>
