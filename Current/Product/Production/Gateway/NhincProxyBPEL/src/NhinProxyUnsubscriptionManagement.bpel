<?xml version="1.0" encoding="UTF-8"?>
<process
    name="NhinProxyUnsubscriptionManagement"
    targetNamespace="urn:gov:hhs:fha:nhinc:gateway:nhincproxybpel:nhinproxyunsubscriptionmanagementment"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
    xmlns:tns="urn:gov:hhs:fha:nhinc:gateway:nhincproxybpel:nhinproxyunsubscriptionmanagementment" 
    xmlns:nccommonproxy="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" 
    xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" 
    xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" 
    xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" 
    xmlns:wsntw="http://docs.oasis-open.org/wsn/bw-2" 
    xmlns:addr="http://schemas.xmlsoap.org/ws/2004/08/addressing" 
    xmlns:nhinhiem="http://www.hhs.gov/healthit/nhin" 
    xmlns:ns0="urn:gov:hhs:fha:nhinc:common:subscription" 
    xmlns:ns1="http://docs.oasis-open.org/wsn/b-2" xmlns:ns2="urn:gov:hhs:fha:nhinc:common:hiemauditlog" xmlns:ns3="urn:gov:hhs:fha:nhinc:common:nhinccommoninternalorch" xmlns:ns4="urn:gov:hhs:fha:nhinc:common:auditlog">
    <import namespace="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" location="Interfaces/wsdl/NhincProxySubscriptionManagement.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://docs.oasis-open.org/wsrf/rw-2" location="Interfaces/wsdl/rw-2.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" location="Interfaces/wsdl/NhincComponentConnectionManager.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/NhinSubscriptionWrapper" location="NhinSubscriptionWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://docs.oasis-open.org/wsn/bw-2" location="Interfaces/wsdl/NhinSubscription.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://www.hhs.gov/healthit/nhin" location="Interfaces/schemas/nhin/HIEM.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" location="Interfaces/wsdl/NhincComponentInternalSubscriptionDte.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" location="Interfaces/wsdl/NhincComponentInternalAuditRepository.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="AuditLogPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" partnerLinkType="tns:NhincComponentInternalAuditRepository" partnerRole="NhincComponentInternalAuditRepositoryPortTypeRole"/>
        <partnerLink name="NhincProxyUnsubscribePL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" partnerLinkType="tns:NhincProxySubscriptionManager" myRole="NhincProxySubscriptionManagerPortTypeRole"/>
        <partnerLink name="ConnectionManagerPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" partnerLinkType="tns:NhincComponentConnectionManager" partnerRole="NhincComponentConnectionManagerPortTypeRole"/>
        <partnerLink name="NhinHiemUnsubscribePL" xmlns:tns="http://enterprise.netbeans.org/bpel/NhinSubscriptionWrapper" partnerLinkType="tns:NotificationSubscriptionManagerLinkType" partnerRole="NotificationSubscriptionManagerRole"/>
        <partnerLink name="HiemDtePL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" partnerLinkType="tns:NhincComponentInternalSubscriptionDte" partnerRole="NhincComponentInternalSubscriptionDtePortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="UnsubscribeIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" messageType="tns:UnsubscribeRequestMessage"/>
    </variables>
    <sequence>
        <receive name="ReceiveUnsubscribe" createInstance="yes" partnerLink="NhincProxyUnsubscribePL" operation="Unsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" portType="tns:NhincProxySubscriptionManagerPortType" variable="UnsubscribeIn"/>
        <scope name="ProcessUnsubscribeScope">
            <variables>
                <variable name="LogUnsubscribeRespRequestOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogUnsubscribeRespRequestIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogUnsubscribeRespRequestMessage"/>
                <variable name="LogNhinUnsubscribeRequestOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogNhinUnsubscribeRequestIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogNhinUnsubscribeRequestMessage"/>
                <variable name="CreateBaseUnsubscribeOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateBaseUnsubscribeResponseMessage"/>
                <variable name="CreateBaseUnsubscribeIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" messageType="tns:CreateBaseUnsubscribeRequestMessage"/>
                <variable name="SubscriptionIdSoapHeader" element="nhinhiem:SubscriptionId"/>
                <variable name="UnsubscribeOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" messageType="tns:UnsubscribeResponseMessage"/>
                <variable name="NhinUnsubscribeOut" xmlns:wsntw="http://docs.oasis-open.org/wsn/bw-2" messageType="wsntw:UnsubscribeResponse"/>
                <variable name="NhinUnsubscribeIn" xmlns:wsntw="http://docs.oasis-open.org/wsn/bw-2" messageType="wsntw:UnsubscribeRequest"/>
                <variable name="GetConnectionInfoOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpontFromNhinTargetResponseMessage"/>
                <variable name="GetConnectionInfoIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpontFromNhinTargetRequestMessage"/>
            </variables>
            <sequence name="ProcessUnsubscribeSeq">
                <assign name="AssignEndpointLookup">
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:nhinTargetSystem</from>
                        <to>$GetConnectionInfoIn.GetConnectionInfoEndpontFromNhinTargetRequest/conninfo:NhinTargetSystem</to>
                    </copy>
                    <copy>
                        <from>'subscriptionmanager'</from>
                        <to>$GetConnectionInfoIn.GetConnectionInfoEndpontFromNhinTargetRequest/conninfo:serviceName</to>
                    </copy>
                </assign>
                <invoke name="InvokeEndpointLookup" partnerLink="ConnectionManagerPL" operation="GetConnectionInfoEndpontFromNhinTarget" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" portType="tns:NhincComponentConnectionManagerPortType" inputVariable="GetConnectionInfoIn" outputVariable="GetConnectionInfoOut">
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>'begin InvokeEndpointLookup'</from>
                        </sxt:log>
                        <sxt:log level="info" location="onStart">
                            <from>$GetConnectionInfoIn</from>
                        </sxt:log>
                        <sxt:log level="info" location="onComplete">
                            <from>'end InvokeEndpointLookup'</from>
                        </sxt:log>
                        <sxt:log level="info" location="onComplete">
                            <from>$GetConnectionInfoOut</from>
                        </sxt:log>
                    </sxt:trace>
                </invoke>
                <assign name="AssignPartnerLink">
                    <copy>
                        <from>bpel:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $GetConnectionInfoOut.GetConnectionInfoEndpontFromNhinTargetResponse/nccommon:EndpointReference)</from>
                        <to partnerLink="NhinHiemUnsubscribePL"/>
                    </copy>
                </assign>
                <assign name="AssignCreateUnsubscribeIn">
                    <copy>
                        <from>'?'</from>
                        <to>$CreateBaseUnsubscribeIn.CreateBaseUnsubscribeRequest/ns0:Empty/ns0:notUsed</to>
                    </copy>
                </assign>
                <invoke name="InvokeCreateUnsubscribe" partnerLink="HiemDtePL" operation="CreateBaseUnsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincinternalcomponentpolicyenginetransform" portType="tns:NhincComponentInternalSubscriptionDtePortType" inputVariable="CreateBaseUnsubscribeIn" outputVariable="CreateBaseUnsubscribeOut"/>
                <assign name="AssignNhinUnsubscribe">
                    <copy>
                        <from>$CreateBaseUnsubscribeOut.CreateBaseUnsubscribeResponse/ns1:Unsubscribe</from>
                        <to variable="NhinUnsubscribeIn" part="UnsubscribeRequest"/>
                    </copy>
                </assign>
                <empty>
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>count($UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe/ns0:subscriptionReference/ns0:ReferenceParameters/ns0:ReferenceParameter[ns0:ElementName = 'SubscriptionId'])</from>
                        </sxt:log>
                        <sxt:log level="info" location="onStart">
                            <from>count($UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe/ns0:subscriptionReference/ns0:ReferenceParameters/ns0:ReferenceParameter[ns0:ElementName = 'SubscriptionId']) &gt;= 1</from>
                        </sxt:log>
                    </sxt:trace>
                </empty>
                <assign name="AssignNhinUnsubscribeAssertion">
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>'assigning assertion info'</from>
                        </sxt:log>
                    </sxt:trace>
                    <copy>
                        <from>'unsubscribe'</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:action"/>
                    </copy>
                    <copy>
                        <from>string($GetConnectionInfoOut.GetConnectionInfoEndpontFromNhinTargetResponse/nccommon:EndpointReference/addr:Address)</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:resource"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:expirationDate</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:expirationDate"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:dateOfSignature</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:signDate"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:claimFormRaw</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:content"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:claimFormRef</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:contentReference"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:code</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:purposeForUseRoleCode"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:displayName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:purposeForUseDisplayName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:codeSystemName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:purposeForUseCodeSystemName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:codeSystem</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:purposeForUseCodeSystem"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:code</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userRoleCode"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:displayName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userRoleCodeDisplayName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:codeSystem</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userRoleCodeSystem"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:codeSystemName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userRoleCodeSystemName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:org/nccommon:name</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userOrganization"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:userName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:familyName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userLastName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:givenName</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userFirstName"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:secondNameOrInitials</from>
                        <to variable="NhinUnsubscribeIn" property="wsntw:userMiddleName"/>
                    </copy>
                </assign>
                <if name="IfSubscriptionIdExists">
                    <condition>count($UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe/ns0:subscriptionReference/ns0:ReferenceParameters/ns0:ReferenceParameter[ns0:ElementName = 'SubscriptionId']) &gt;= 1</condition>
                    <sequence name="SequenceSoapHeader">
                        <assign name="BuildSoapHeader">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>'building soap header'</from>
                                </sxt:log>
                                <sxt:log level="info" location="onComplete">
                                    <from variable="SubscriptionIdSoapHeader"/>
                                </sxt:log>
                                <sxt:log level="info" location="onStart">
                                    <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe/ns0:subscriptionReference/ns0:ReferenceParameters/ns0:ReferenceParameter[ns0:ElementName = 'SubscriptionId']/ns0:Value</from>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe/ns0:subscriptionReference/ns0:ReferenceParameters/ns0:ReferenceParameter[ns0:ElementName = 'SubscriptionId']/ns0:Value</from>
                                <to variable="SubscriptionIdSoapHeader"/>
                            </copy>
                        </assign>
                        <assign name="AssignSoapHeader">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>'assigning soap header'</from>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>$SubscriptionIdSoapHeader</from>
                                <to variable="NhinUnsubscribeIn" property="wsntw:SubscriptionId"/>
                            </copy>
                        </assign>
                    </sequence>
                    <else>
                        <empty name="EmptyLogNoSubscription">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <bpel:from>'SubscriptionId not found in message'</bpel:from>
                                </sxt:log>
                            </sxt:trace>
                        </empty>
                    </else>
                </if>
                <assign name="AssignLogNhinUnsubscribeRequestInput">
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:unsubscribe</from>
                        <to>$LogNhinUnsubscribeRequestIn.LogNhinUnsubscribeRequest/ns2:message/ns0:Unsubscribe</to>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion</from>
                        <to>$LogNhinUnsubscribeRequestIn.LogNhinUnsubscribeRequest/ns2:message/ns3:assertion</to>
                    </copy>
                    <copy>
                        <from>'Outbound'</from>
                        <to>$LogNhinUnsubscribeRequestIn.LogNhinUnsubscribeRequest/ns4:direction</to>
                    </copy>
                    <copy>
                        <from>'Nhin'</from>
                        <to>$LogNhinUnsubscribeRequestIn.LogNhinUnsubscribeRequest/ns4:interface</to>
                    </copy>
                </assign>
                <invoke name="InvokeLogNhinUnsubscribeRequest" partnerLink="AuditLogPL" operation="LogNhinUnsubscribeRequest" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" portType="tns:NhincComponentInternalAuditRepositoryPortType" inputVariable="LogNhinUnsubscribeRequestIn" outputVariable="LogNhinUnsubscribeRequestOut">
                    <sxt:trace>
                        <sxt:log level="info" location="onComplete">
                            <bpel:from>'NhinProxyUnsubscriptionManagement.bpel - Completed logging unsubscribe message being sent to a remote gateway'</bpel:from>
                        </sxt:log>
                        <sxt:log level="warning" location="onComplete">
                            <bpel:from variable="LogNhinUnsubscribeRequestOut"/>
                        </sxt:log>
                    </sxt:trace>
                </invoke>
                <invoke name="InvokeNhinUnsubscribe" partnerLink="NhinHiemUnsubscribePL" operation="Unsubscribe" xmlns:wsntw="http://docs.oasis-open.org/wsn/bw-2" portType="wsntw:SubscriptionManager" inputVariable="NhinUnsubscribeIn" outputVariable="NhinUnsubscribeOut">
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>'begin InvokeNhinUnsubscribe'</from>
                        </sxt:log>
                        <sxt:log level="info" location="onStart">
                            <from>$NhinUnsubscribeIn</from>
                        </sxt:log>
                        <sxt:log level="info" location="onComplete">
                            <from>'end InvokeNhinUnsubscribe'</from>
                        </sxt:log>
                        <sxt:log level="info" location="onComplete">
                            <from>$NhinUnsubscribeOut</from>
                        </sxt:log>
                    </sxt:trace>
                </invoke>
                <assign name="AssignUnsubscribeResponse">
                    <copy>
                        <from variable="NhinUnsubscribeOut" part="UnsubscribeResponse"/>
                        <to variable="UnsubscribeOut" part="UnsubscribeResponse"/>
                    </copy>
                    <copy>
                        <from>$UnsubscribeIn.UnsubscribeRequest/nccommonproxy:assertion</from>
                        <to>$LogUnsubscribeRespRequestIn.LogUnsubscribeRespRequest/ns2:message/ns2:assertion</to>
                    </copy>
                    <copy>
                        <from variable="UnsubscribeOut" part="UnsubscribeResponse"/>
                        <to>$LogUnsubscribeRespRequestIn.LogUnsubscribeRespRequest/ns2:message/ns1:UnsubscribeResponse</to>
                    </copy>
                    <copy>
                        <from>'Outbound'</from>
                        <to>$LogUnsubscribeRespRequestIn.LogUnsubscribeRespRequest/ns4:direction</to>
                    </copy>
                    <copy>
                        <from>'Nhin'</from>
                        <to>$LogUnsubscribeRespRequestIn.LogUnsubscribeRespRequest/ns4:interface</to>
                    </copy>
                </assign>
                <invoke name="InvokeLogUnsubscribeRespRequest" partnerLink="AuditLogPL" operation="LogUnsubscribeRespRequest" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" portType="tns:NhincComponentInternalAuditRepositoryPortType" inputVariable="LogUnsubscribeRespRequestIn" outputVariable="LogUnsubscribeRespRequestOut">
                    <sxt:trace>
                        <sxt:log level="info" location="onComplete">
                            <bpel:from>'NhinProxyUnsubscriptionManagement.bpel - Completed logging unsubscribe response message received from remote gateway'</bpel:from>
                        </sxt:log>
                        <sxt:log level="warning" location="onComplete">
                            <bpel:from variable="LogUnsubscribeRespRequestOut"/>
                        </sxt:log>
                    </sxt:trace>
                </invoke>
                <reply name="ReplyUnsubscribe" partnerLink="NhincProxyUnsubscribePL" operation="Unsubscribe" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxysubscriptionmanagement" portType="tns:NhincProxySubscriptionManagerPortType" variable="UnsubscribeOut">
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>'begin ReplyUnsubscribe'</from>
                        </sxt:log>
                        <sxt:log level="info" location="onStart">
                            <from>$UnsubscribeOut</from>
                        </sxt:log>
                    </sxt:trace>
                </reply>
            </sequence>
        </scope>
    </sequence>
</process>
