<?xml version="1.0" encoding="UTF-8"?>
<process
    name="NhincProxyDocRetrieve"
    targetNamespace="urn:gov:hhs:fha:nhinc:gateway:nhincproxybpel:nhincproxydocretrieve"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
    xmlns:tns="urn:gov:hhs:fha:nhinc:gateway:nhincproxybpel:nhincproxydocretrieve" 
    xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" 
    xmlns:nccommonproxy="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" 
    xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" 
    xmlns:soapaddr04="http://schemas.xmlsoap.org/ws/2004/08/addressing" 
    xmlns:ihe="urn:ihe:iti:xds-b:2007" 
    xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" 
    xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" 
    xmlns:nccommonadapter="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter" 
    xmlns:auditlog="urn:gov:hhs:fha:nhinc:common:auditlog">
    <import namespace="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" location="Interfaces/wsdl/NhincProxyDocRetrieve.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/NhinDocRetrieveWrapper" location="NhinDocRetrieveWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:ihe:iti:xds-b:2007" location="Interfaces/wsdl/NhinDocRetrieve.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" location="Interfaces/wsdl/NhincComponentConnectionManager.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" location="Interfaces/wsdl/NhincComponentInternalAuditRepository.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="AuditRepositoryPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" partnerLinkType="tns:NhincComponentInternalAuditRepository" partnerRole="NhincComponentInternalAuditRepositoryPortTypeRole"/>
        <partnerLink name="ConnectionManagerPL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" partnerLinkType="tns:NhincComponentConnectionManager" partnerRole="NhincComponentConnectionManagerPortTypeRole"/>
        <partnerLink name="NhinDocRetrievePL" xmlns:tns="http://enterprise.netbeans.org/bpel/NhinDocRetrieveWrapper" partnerLinkType="tns:RespondingGateway_Retrieve_LinkType" partnerRole="RespondingGateway_Retrieve_Role"/>
        <partnerLink name="NhincProxyDocRetrievePL" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" partnerLinkType="tns:NhincProxyDocRetrieve" myRole="NhincProxyDocRetrievePortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="LogDocRetrieveOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
        <variable name="LogDocRetrieveIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogDocRetrieveRequestMessage"/>
        <variable name="Proxy_CrossGatewayRetrieveOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" messageType="tns:RespondingGateway_CrossGatewayRetrieveResponseMessage"/>
        <variable name="Proxy_CrossGatewayRetrieveIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" messageType="tns:RespondingGateway_CrossGatewayRetrieveRequestMessage"/>
    </variables>
    <sequence>
        <receive name="ReceiveProxyDocRetrieve" createInstance="yes" partnerLink="NhincProxyDocRetrievePL" operation="RespondingGateway_CrossGatewayRetrieve" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" portType="tns:NhincProxyDocRetrievePortType" variable="Proxy_CrossGatewayRetrieveIn"/>
        <assign name="AssignAuditReposDRReq">
            <copy>
                <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/ihe:RetrieveDocumentSetRequest</from>
                <to>$LogDocRetrieveIn.LogDocRetrieveRequest/auditlog:message/ihe:RetrieveDocumentSetRequest</to>
            </copy>
            <copy>
                <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion</from>
                <to>$LogDocRetrieveIn.LogDocRetrieveRequest/auditlog:message/auditlog:assertion</to>
            </copy>
            <copy>
                <from>'Inbound'</from>
                <to>$LogDocRetrieveIn.LogDocRetrieveRequest/auditlog:direction</to>
            </copy>
            <copy>
                <from>'Nhin'</from>
                <to>$LogDocRetrieveIn.LogDocRetrieveRequest/auditlog:interface</to>
            </copy>
        </assign>
        <invoke name="InvokeAuditReposDRReq" partnerLink="AuditRepositoryPL" operation="LogDocRetrieve" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" portType="tns:NhincComponentInternalAuditRepositoryPortType" inputVariable="LogDocRetrieveIn" outputVariable="LogDocRetrieveOut"/>
        <scope name="ProxyDocRetrieveScope">
            <variables>
                <variable name="LogDocRetrieveResultOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogEventResponseMessage"/>
                <variable name="LogDocRetrieveResultIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" messageType="tns:LogDocRetrieveResultRequestMessage"/>
                <variable name="TargetAddress" type="xsd:string"/>
                <variable name="GetConnectionInfoEndpointByServiceNameOut" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameResponseMessage"/>
                <variable name="GetConnectionInfoEndpointByServiceNameIn" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" messageType="tns:GetConnectionInfoEndpointByServiceNameRequestMessage"/>
                <variable name="Nhin_CrossGatewayRetrieveOut" xmlns:ihe="urn:ihe:iti:xds-b:2007" messageType="ihe:CrossGatewayRetrieveResponse_Message"/>
                <variable name="Nhin_CrossGatewayRetrieveIn" xmlns:ihe="urn:ihe:iti:xds-b:2007" messageType="ihe:CrossGatewayRetrieve_Message"/>
            </variables>
            <faultHandlers>
                <catch faultName="sxeh:systemFault" faultVariable="systemFaultVar" faultMessageType="sxeh:faultMessage">
                    <sequence name="SystemFaultSeq">
                        <assign name="AssignErrorInfo">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <bpel:from>'NhinProxyDocRetrieve.bpel - A system fault was encountered processing a doc retrieve message. Fault details follow...'</bpel:from>
                                </sxt:log>
                                <sxt:log level="warning" location="onStart">
                                    <bpel:from variable="systemFaultVar"/>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>'urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Failure'</from>
                                <to>$Proxy_CrossGatewayRetrieveOut.RespondingGateway_CrossGatewayRetrieveResponse/rs:RegistryResponse/@status</to>
                            </copy>
                            <copy>
                                <from>'XDSRepositoryError'</from>
                                <to>$Proxy_CrossGatewayRetrieveOut.RespondingGateway_CrossGatewayRetrieveResponse/rs:RegistryResponse/rs:RegistryErrorList/rs:RegistryError/@errorCode</to>
                            </copy>
                            <copy>
                                <from>'Error'</from>
                                <to>$Proxy_CrossGatewayRetrieveOut.RespondingGateway_CrossGatewayRetrieveResponse/rs:RegistryResponse/rs:RegistryErrorList/rs:RegistryError/@severity</to>
                            </copy>
                            <copy>
                                <from>'Processing NHIN Proxy document retrieve'</from>
                                <to>$Proxy_CrossGatewayRetrieveOut.RespondingGateway_CrossGatewayRetrieveResponse/rs:RegistryResponse/rs:RegistryErrorList/rs:RegistryError/@codeContext</to>
                            </copy>
                        </assign>
                        <reply name="ReplyFromFault" partnerLink="NhincProxyDocRetrievePL" operation="RespondingGateway_CrossGatewayRetrieve" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" portType="tns:NhincProxyDocRetrievePortType" variable="Proxy_CrossGatewayRetrieveOut"/>
                        <exit name="ExitFromFault"/>
                    </sequence>
                </catch>
            </faultHandlers>
            <sequence name="ProxyDocRetrieveSeq">
                <if name="IfHasHomeCommunity">
                    <condition>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:nhinTargetSystem/nccommon:homeCommunity/nccommon:homeCommunityId</condition>
                    <sequence name="Sequence1">
                        <assign name="AssignConnectionMgrInput">
                            <copy>
                                <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:nhinTargetSystem/nccommon:homeCommunity</from>
                                <to>$GetConnectionInfoEndpointByServiceNameIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:homeCommunity</to>
                            </copy>
                            <copy>
                                <from>'documentretrieve'</from>
                                <to>$GetConnectionInfoEndpointByServiceNameIn.GetConnectionInfoEndpointByServiceNameRequest/conninfo:homeCommunityWithServiceName/conninfo:serviceName</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeConnectionManager" partnerLink="ConnectionManagerPL" operation="GetConnectionInfoEndpointByServiceName" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" portType="tns:NhincComponentConnectionManagerPortType" inputVariable="GetConnectionInfoEndpointByServiceNameIn" outputVariable="GetConnectionInfoEndpointByServiceNameOut"/>
                        <assign name="AssignConnectionMgrOutput">
                            <copy>
                                <from>bpel:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $GetConnectionInfoEndpointByServiceNameOut.ConnectionInfoEndpoint/conninfo:serviceConnectionInfoEndpoints/conninfo:serviceConnectionInfoEndpoint/nccommon:EPR/nccommon:EndpointReference)</from>
                                <to partnerLink="NhinDocRetrievePL"/>
                            </copy>
                            <copy>
                                <from>string($GetConnectionInfoEndpointByServiceNameOut.ConnectionInfoEndpoint/conninfo:serviceConnectionInfoEndpoints/conninfo:serviceConnectionInfoEndpoint/nccommon:EPR/nccommon:EndpointReference/soapaddr04:Address)</from>
                                <to variable="TargetAddress"/>
                            </copy>
                        </assign>
                    </sequence>
                    <else>
                        <assign name="AssignEprProvided">
                            <copy>
                                <from>bpel:doXslTransform('urn:stylesheets:wrap2serviceref.xsl', $Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:nhinTargetSystem/nccommon:epr/nccommon:EndpointReference)</from>
                                <to partnerLink="NhinDocRetrievePL"/>
                            </copy>
                            <copy>
                                <from>string($Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:nhinTargetSystem/nccommon:epr/nccommon:EndpointReference/soapaddr04:Address)</from>
                                <to variable="TargetAddress"/>
                            </copy>
                        </assign>
                    </else>
                </if>
                <assign name="AssignAssertion">
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/ihe:RetrieveDocumentSetRequest</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" part="body"/>
                    </copy>
                    <copy>
                        <from>string($TargetAddress)</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:resource"/>
                    </copy>
                    <copy>
                        <from>'retrieveDocuments'</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:action"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:claimFormRaw</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:content"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:claimFormRef</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:contentReference"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:expirationDate</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:expirationDate"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:codeSystem</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:purposeForUseCodeSystem"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:codeSystemName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:purposeForUseCodeSystemName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:displayName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:purposeForUseDisplayName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:purposeOfDisclosureCoded/nccommon:code</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:purposeForUseRoleCode"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:dateOfSignature</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:signDate"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:givenName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userFirstName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:familyName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userLastName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:personName/nccommon:secondNameOrInitials</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userMiddleName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:userName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:org/nccommon:name</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userOrganization"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:code</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userRoleCode"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:displayName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userRoleCodeDisplayName"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:codeSystem</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userRoleCodeSystem"/>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion/nccommon:userInfo/nccommon:roleCoded/nccommon:codeSystemName</from>
                        <to variable="Nhin_CrossGatewayRetrieveIn" property="ihe:userRoleCodeSystemName"/>
                    </copy>
                </assign>
                <invoke name="InvokeNhinDocRetrieve" partnerLink="NhinDocRetrievePL" operation="RespondingGateway_CrossGatewayRetrieve" xmlns:ihe="urn:ihe:iti:xds-b:2007" portType="ihe:RespondingGateway_Retrieve_PortType" inputVariable="Nhin_CrossGatewayRetrieveIn" outputVariable="Nhin_CrossGatewayRetrieveOut"/>
                <assign name="AssignNhinResponse">
                    <copy>
                        <from variable="Nhin_CrossGatewayRetrieveOut" part="body"/>
                        <to variable="Proxy_CrossGatewayRetrieveOut" part="RespondingGateway_CrossGatewayRetrieveResponse"/>
                    </copy>
                </assign>
                <assign name="AssignLogDocRetrieveResponse">
                    <copy>
                        <from>$Nhin_CrossGatewayRetrieveOut.body/rs:RegistryResponse</from>
                        <to>$LogDocRetrieveResultIn.LogDocRetrieveResultRequest/auditlog:message/ihe:RetrieveDocumentSetResponse/rs:RegistryResponse</to>
                    </copy>
                    <copy>
                        <from>$Proxy_CrossGatewayRetrieveIn.RespondingGateway_CrossGatewayRetrieveRequest/nccommonproxy:assertion</from>
                        <to>$LogDocRetrieveResultIn.LogDocRetrieveResultRequest/auditlog:message/auditlog:assertion</to>
                    </copy>
                    <copy>
                        <from>'Outbound'</from>
                        <to>$LogDocRetrieveResultIn.LogDocRetrieveResultRequest/auditlog:direction</to>
                    </copy>
                    <copy>
                        <from>'Nhin'</from>
                        <to>$LogDocRetrieveResultIn.LogDocRetrieveResultRequest/auditlog:interface</to>
                    </copy>
                </assign>
                <if name="IfContainsDocument">
                    <condition>$Nhin_CrossGatewayRetrieveOut.body/ihe:DocumentResponse</condition>
                    <assign name="AssignDocumentResponse">
                        <copy>
                            <from>$Nhin_CrossGatewayRetrieveOut.body/ihe:DocumentResponse</from>
                            <to>$LogDocRetrieveResultIn.LogDocRetrieveResultRequest/auditlog:message/ihe:RetrieveDocumentSetResponse/ihe:DocumentResponse</to>
                        </copy>
                    </assign>
                </if>
                <invoke name="InvokeLogDocRetrieveResponse" partnerLink="AuditRepositoryPL" operation="LogDocRetrieveResult" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" portType="tns:NhincComponentInternalAuditRepositoryPortType" inputVariable="LogDocRetrieveResultIn" outputVariable="LogDocRetrieveResultOut"/>
            </sequence>
        </scope>
        <reply name="ReplyProxyDocRetrieve" partnerLink="NhincProxyDocRetrievePL" operation="RespondingGateway_CrossGatewayRetrieve" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocretrieve" portType="tns:NhincProxyDocRetrievePortType" variable="Proxy_CrossGatewayRetrieveOut"/>
    </sequence>
</process>
