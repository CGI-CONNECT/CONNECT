<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xalan="http://xml.apache.org/xslt" xmlns:ejbjarproject2="http://www.netbeans.org/ns/j2ee-ejbjarproject/2" xmlns:jaxws="http://www.netbeans.org/ns/jax-ws/1">
    <!--
                ===================
                JAX-WS WSGEN SECTION
                ===================
            -->
    <!--
                ===================
                JAX-WS WSIMPORT SECTION
                ===================
            -->
    <target name="wsimport-init" depends="init">
        <mkdir dir="${build.generated.dir}/wsimport/client"/>
        <mkdir dir="${build.generated.dir}/wsimport/service"/>
        <mkdir dir="${build.generated.dir}/wsimport/binaries"/>
        <mkdir dir="${classes.dir}"/>
        <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
            <classpath path="${j2ee.platform.wsimport.classpath}"/>
        </taskdef>
    </target>
    <target name="wsimport-client-check-NhincDocRetrieve" depends="wsimport-init">
        <condition property="wsimport-client-NhincDocRetrieve.notRequired">
            <available file="${build.generated.dir}/wsimport/client/gov:hhs:fha:nhinc:nhincdocretrieve/NhincDocRetrieve.java"/>
        </condition>
    </target>
    <target name="wsimport-client-NhincDocRetrieve" depends="wsimport-init,wsimport-client-check-NhincDocRetrieve" unless="wsimport-client-NhincDocRetrieve.notRequired">
        <property name="wsdl-NhincDocRetrieve" location="${meta.inf}/xml-resources/web-service-references/NhincDocRetrieve/wsdl/NhincDocRetrieve.wsdl"/>
        <wsimport sourcedestdir="${build.generated.dir}/wsimport/client" destdir="${build.generated.dir}/wsimport/binaries" wsdl="${wsdl-NhincDocRetrieve}" catalog="catalog.xml"/>
    </target>
    <target name="wsimport-client-clean-NhincDocRetrieve" depends="-init-project">
        <delete dir="${build.generated.dir}/wsimport/client/gov:hhs:fha:nhinc:nhincdocretrieve"/>
    </target>
    <target name="wsimport-service-check-DocRetrieve" depends="wsimport-init">
        <condition property="wsimport-service-DocRetrieve.notRequired">
            <available file="${build.generated.dir}/wsimport/service/ihe/iti/xds_b/_2007/RespondingGateway_Retrieve_Service.java"/>
        </condition>
    </target>
    <target name="wsimport-service-DocRetrieve" depends="wsimport-init,wsimport-service-check-DocRetrieve" unless="wsimport-service-DocRetrieve.notRequired">
        <property name="service-wsdl-DocRetrieve" location="${meta.inf}/xml-resources/web-services/DocRetrieve/wsdl/NhinDocRetrieve.wsdl"/>
        <wsimport sourcedestdir="${build.generated.dir}/wsimport/service" destdir="${build.generated.dir}/wsimport/binaries" wsdl="${service-wsdl-DocRetrieve}" catalog="catalog.xml"/>
        <property name="targetLocation-DocRetrieve" location="${meta.inf}/wsdl/DocRetrieve"/>
        <property name="sourceLocation-DocRetrieve" location="${meta.inf}/xml-resources/web-services/DocRetrieve/wsdl/"/>
        <copy todir="${targetLocation-DocRetrieve}">
            <fileset dir="${sourceLocation-DocRetrieve}"/>
        </copy>
    </target>
    <target name="wsimport-service-clean-DocRetrieve" depends="-init-project">
        <delete dir="${build.generated.dir}/wsimport/service/ihe/iti/xds_b/_2007"/>
    </target>
    <target name="wsimport-client-generate" depends="wsimport-client-NhincDocRetrieve"/>
    <target name="wsimport-client-compile" depends="wsimport-client-generate">
        <ejbjarproject2:javac srcdir="${build.generated.dir}/wsimport/client" classpath="${j2ee.platform.wsimport.classpath}:${javac.classpath}" destdir="${classes.dir}"/>
        <copy todir="${classes.dir}">
            <fileset dir="${build.generated.dir}/wsimport/binaries" includes="**/*.xml"/>
        </copy>
    </target>
    <target name="wsimport-service-generate" depends="wsimport-service-DocRetrieve"/>
    <target name="wsimport-service-compile" depends="wsimport-service-generate">
        <ejbjarproject2:javac srcdir="${build.generated.dir}/wsimport/service" classpath="${j2ee.platform.wsimport.classpath}:${javac.classpath}" destdir="${classes.dir}"/>
    </target>
</project>
